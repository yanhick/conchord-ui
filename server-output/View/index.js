// Generated by psc version 0.9.3
"use strict";
var Prelude = require("../Prelude");
var Data_Tuple = require("../Data.Tuple");
var Data_Either = require("../Data.Either");
var Pux_Html = require("../Pux.Html");
var Pux_Html_Events = require("../Pux.Html.Events");
var Pux_Html_Attributes = require("../Pux.Html.Attributes");
var Pux_Router = require("../Pux.Router");
var Model = require("../Model");
var Action = require("../Action");
var Route = require("../Route");
var App = require("../App");
var Pux_Html_Elements = require("../Pux.Html.Elements");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_Function = require("../Data.Function");
var Parser = require("../Parser");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var updateSongForm = function (id) {
    return function (disable) {
        return function (song) {
            return Pux_Html.withChild(Pux_Html.withAttr(Pux_Html.withAttr(Pux_Html.withAttr(Pux_Html_Elements.form)(Pux_Html_Attributes.action("/update/" + Data_Show.show(Data_Show.showInt)(id))))(Pux_Html_Attributes.method("POST")))(Pux_Html_Events.onSubmit(Data_Function.apply(Data_Function["const"])(new Action.IOAction(Action.SubmitUpdateSong.value)))))(Pux_Html.bind(Pux_Html_Elements.textarea([ Pux_Html_Attributes.name("song"), Pux_Html_Attributes.type_("text"), Pux_Html_Events.onChange(function (e) {
                return new Action.UIAction(new Action.UpdateSongChange(e));
            }), Pux_Html_Attributes.value(song) ])([  ]))(function () {
                return Pux_Html_Elements.input([ Pux_Html_Attributes.type_("submit"), Pux_Html_Attributes.value("edit this song"), Pux_Html_Attributes.disabled(disable) ])([  ]);
            }));
        };
    };
};
var songMeta = function (v) {
    return Pux_Html.withChild(Pux_Html_Elements.header)(Pux_Html.bind(Pux_Html.withChild(Pux_Html_Elements.h1)(Pux_Html_Elements.text(v.title)))(function () {
        return Pux_Html.bind(Pux_Html.withChild(Pux_Html_Elements.h2)(Pux_Html_Elements.text(v.artist)))(function () {
            return Pux_Html.withChild(Pux_Html_Elements.h3)(Pux_Html_Elements.text(v.album));
        });
    }));
};
var songLyric = function (v) {
    if (v instanceof Model.ChordAndLyric) {
        var showChord = function (v1) {
            if (v1 instanceof Model.InsideWord) {
                return Data_Show.show(Parser.showSongChord)(v1.value0);
            };
            if (v1 instanceof Model.BetweenWord) {
                return Data_Show.show(Parser.showSongChord)(v1.value0);
            };
            throw new Error("Failed pattern match at View line 212, column 9 - line 213, column 9: " + [ v1.constructor.name ]);
        };
        var chordPlacement = function (v1) {
            if (v1 instanceof Model.InsideWord) {
                return "inside";
            };
            if (v1 instanceof Model.BetweenWord) {
                return "between";
            };
            throw new Error("Failed pattern match at View line 204, column 1 - line 216, column 1: " + [ v1.constructor.name ]);
        };
        return Pux_Html.withChild(Pux_Html.withAttr(Pux_Html.withAttr(Pux_Html_Elements.span)(Pux_Html_Attributes.data_("lyrics")(v.value1)))(Pux_Html_Attributes.data_("chord-placement")(chordPlacement(v.value0))))(Pux_Html.bind(Pux_Html.withChild(Pux_Html.withAttr(Pux_Html_Elements.i)(Pux_Html_Attributes.data_("chord")(showChord(v.value0))))(Pux_Html_Elements.text("")))(function () {
            return Pux_Html_Elements.text(v.value1);
        }));
    };
    if (v instanceof Model.OnlyChord) {
        return Pux_Html.withChild(Pux_Html.withAttr(Pux_Html_Elements.span)(Pux_Html_Attributes.data_("chord")(Data_Show.show(Parser.showSongChord)(v.value0))))(Pux_Html.withChild(Pux_Html.withAttr(Pux_Html_Elements.i)(Pux_Html_Attributes.data_("chord")(Data_Show.show(Parser.showSongChord)(v.value0))))(Pux_Html_Elements.text("")));
    };
    if (v instanceof Model.OnlyLyric) {
        return Pux_Html.withChild(Pux_Html.withAttr(Pux_Html_Elements.span)(Pux_Html_Attributes.data_("lyrics")(v.value0)))(Pux_Html_Elements.text(v.value0));
    };
    throw new Error("Failed pattern match at View line 204, column 1 - line 216, column 1: " + [ v.constructor.name ]);
};
var songSection = function (v) {
    return Pux_Html.withChild(Pux_Html.withAttr(Pux_Html_Elements.section)(Pux_Html_Attributes.data_("section")(Model.serializeSongSectionName(v.name))))(Pux_Html.bind(Pux_Html.withChild(Pux_Html_Elements.h4)(Pux_Html_Elements.text(Model.serializeSongSectionName(v.name))))(function () {
        return Pux_Html_Elements.p([  ])(Data_Functor.map(Data_Functor.functorArray)(songLyric)(v.lyrics));
    }));
};
var songContent = function (v) {
    return Pux_Html_Elements.article([  ])(Data_Functor.map(Data_Functor.functorArray)(songSection)(v));
};
var songPageContent = function (v) {
    return function (v1) {
        if (v.song instanceof App.Empty) {
            return Pux_Html.withChild(Pux_Html_Elements.main)(Pux_Html_Elements.text(""));
        };
        if (v.song instanceof App.Loading) {
            return Pux_Html.withChild(Pux_Html_Elements.main)(Pux_Html_Elements.text("Loading Song"));
        };
        if (v.song instanceof App.LoadError) {
            return Pux_Html.withChild(Pux_Html_Elements.main)(Pux_Html_Elements.text(v.song.value0));
        };
        if (v.song instanceof App.Loaded) {
            var hideDuplicatedChorusClass = function (v2) {
                if (v2) {
                    return [ Pux_Html_Attributes.className("hide-duplicated-chorus") ];
                };
                if (!v2) {
                    return [  ];
                };
                throw new Error("Failed pattern match at View line 179, column 9 - line 181, column 32: " + [ v2.constructor.name ]);
            };
            var content$prime = function (v2) {
                if (v2) {
                    return Pux_Html.bind(songMeta(v.song.value0.meta))(function () {
                        return songContent(v.song.value0.content);
                    });
                };
                if (!v2) {
                    return songContent(v.song.value0.content);
                };
                throw new Error("Failed pattern match at View line 173, column 1 - line 174, column 1: " + [ v2.constructor.name ]);
            };
            return Pux_Html_Elements.main(hideDuplicatedChorusClass(!v1.showDuplicatedChorus))([ content$prime(v1.showSongMeta) ]);
        };
        throw new Error("Failed pattern match at View line 173, column 1 - line 174, column 1: " + [ v.constructor.name, v1.constructor.name ]);
    };
};
var updateSongPage = function (id) {
    return function (v) {
        var render = function (v1) {
            if (v1 instanceof Data_Either.Right) {
                return Pux_Html.bind(songMeta(v1.value0.meta))(function () {
                    return songContent(v1.value0.content);
                });
            };
            if (v1 instanceof Data_Either.Left) {
                return Pux_Html_Elements.text(v1.value0);
            };
            throw new Error("Failed pattern match at View line 146, column 9 - line 148, column 32: " + [ v1.constructor.name ]);
        };
        return Pux_Html.withChild(Pux_Html.withAttr(Pux_Html_Elements.div)(Pux_Html_Attributes.className("editor")))(Pux_Html.bind(Pux_Html.withChild(Pux_Html_Elements.aside)(updateSongForm(id)(Data_Either.isLeft(Data_Tuple.snd(v.io.updateSong)))(Data_Tuple.fst(v.io.updateSong))))(function () {
            return Pux_Html.withChild(Pux_Html_Elements.main)(Data_Function.apply(render)(Data_Tuple.snd(v.io.updateSong)));
        }));
    };
};
var searchResult = function (v) {
    return Pux_Html.withChild(Pux_Html_Elements.li)(Pux_Html.withChild(Pux_Router.link("/song/" + v.id))(Pux_Html.bind(Pux_Html.withChild(Pux_Html_Elements.h3)(Pux_Html_Elements.text(v.song.meta.title)))(function () {
        return Pux_Html.bind(Pux_Html.withChild(Pux_Html_Elements.h4)(Pux_Html_Elements.text(v.song.meta.artist)))(function () {
            return Pux_Html.bind(Pux_Html.withChild(Pux_Html_Elements.h5)(Pux_Html_Elements.text(v.song.meta.album)))(function () {
                return Pux_Html.withChild(Pux_Html_Elements.h6)(Pux_Html_Elements.text(Data_Show.show(Data_Show.showInt)(v.song.meta.year)));
            });
        });
    })));
};
var searchResultPageContent = function (v) {
    return function (v1) {
        if (v.searchResults instanceof App.Empty) {
            return Pux_Html.withChild(Pux_Html_Elements.ul)(Pux_Html_Elements.text(""));
        };
        if (v.searchResults instanceof App.Loading) {
            return Pux_Html.withChild(Pux_Html_Elements.ul)(Pux_Html_Elements.text("Loading..."));
        };
        if (v.searchResults instanceof App.Loaded) {
            return Pux_Html_Elements.ul([  ])(Data_Functor.map(Data_Functor.functorArray)(searchResult)(v.searchResults.value0));
        };
        if (v.searchResults instanceof App.LoadError) {
            return Pux_Html.withChild(Pux_Html_Elements.ul)(Pux_Html_Elements.text(v.searchResults.value0));
        };
        throw new Error("Failed pattern match at View line 88, column 1 - line 89, column 1: " + [ v.constructor.name, v1.constructor.name ]);
    };
};
var searchForm = function (q) {
    return Pux_Html.withChild(Pux_Html.withAttr(Pux_Html.withAttr(Pux_Html.withAttr(Pux_Html_Elements.form)(Pux_Html_Attributes.action("/search")))(Pux_Html_Attributes.method("GET")))(Pux_Html_Events.onSubmit(Data_Function.apply(Data_Function["const"])(new Action.PageView(new Route.SearchResultPage(q))))))(Pux_Html_Elements.input([ Pux_Html_Attributes.name("q"), Pux_Html_Attributes.type_("search"), Pux_Html_Attributes.placeholder("Search a song, artist or album"), Pux_Html_Attributes.value(q), Pux_Html_Events.onChange(function (f) {
        return new Action.UIAction(new Action.SearchChange(f));
    }) ])([  ]));
};
var notFoundPage = Pux_Html.withChild(Pux_Html_Elements.div)(Pux_Html_Elements.text("not found"));
var newSongPageHeader = Pux_Html.withChild(Pux_Html_Elements.nav)(Pux_Html.withChild(Pux_Html_Elements.h1)(Pux_Html_Elements.text("Add a new song")));
var newSongForm = function (disable) {
    return function (song) {
        return Pux_Html.withChild(Pux_Html.withAttr(Pux_Html.withAttr(Pux_Html.withAttr(Pux_Html_Elements.form)(Pux_Html_Attributes.action("/new")))(Pux_Html_Attributes.method("POST")))(Pux_Html_Events.onSubmit(Data_Function.apply(Data_Function["const"])(new Action.IOAction(Action.SubmitNewSong.value)))))(Pux_Html.bind(Pux_Html_Elements.textarea([ Pux_Html_Attributes.name("song"), Pux_Html_Attributes.type_("text"), Pux_Html_Attributes.value(song), Pux_Html_Events.onChange(function (e) {
            return new Action.UIAction(new Action.NewSongChange(e));
        }) ])([  ]))(function () {
            return Pux_Html_Elements.input([ Pux_Html_Attributes.type_("submit"), Pux_Html_Attributes.value("add this new song"), Pux_Html_Attributes.disabled(disable) ])([  ]);
        }));
    };
};
var newSongPage = function (v) {
    var render = function (v1) {
        if (v1 instanceof Data_Either.Right) {
            return Pux_Html.bind(songMeta(v1.value0.meta))(function () {
                return songContent(v1.value0.content);
            });
        };
        if (v1 instanceof Data_Either.Left) {
            return Pux_Html_Elements.text(v1.value0);
        };
        throw new Error("Failed pattern match at View line 124, column 9 - line 126, column 32: " + [ v1.constructor.name ]);
    };
    return Pux_Html.withChild(Pux_Html.withAttr(Pux_Html_Elements.div)(Pux_Html_Attributes.className("editor")))(Pux_Html.bind(Pux_Html.withChild(Pux_Html_Elements.aside)(newSongForm(Data_Either.isLeft(Data_Tuple.snd(v.io.newSong)))(Data_Tuple.fst(v.io.newSong))))(function () {
        return Pux_Html.withChild(Pux_Html_Elements.main)(Data_Function.apply(render)(Data_Tuple.snd(v.io.newSong)));
    }));
};
var header_ = function (v) {
    return function (v1) {
        return Pux_Html.withChild(Pux_Html_Elements.header)(Pux_Html.withChild(Pux_Html_Elements.nav)(Pux_Html.bind(searchForm(v1.searchQuery))(function () {
            return Pux_Html.withChild(Pux_Router.link("/new"))(Pux_Html_Elements.text("add a new song"));
        })));
    };
};
var homePage = function (v) {
    return Pux_Html.withChild(Pux_Html_Elements.div)(header_(v.io)(v.ui));
};
var searchResultPage = function (v) {
    return Pux_Html.withChild(Pux_Html_Elements.div)(Pux_Html.bind(header_(v.io)(v.ui))(function () {
        return searchResultPageContent(v.io)(v.ui);
    }));
};
var deleteSongForm = function (id) {
    return Pux_Html.withChild(Pux_Html.withAttr(Pux_Html.withAttr(Pux_Html.withAttr(Pux_Html_Elements.form)(Pux_Html_Attributes.action("/song/api")))(Pux_Html_Attributes.method("DELETE")))(Pux_Html_Events.onSubmit(Data_Function.apply(Data_Function["const"])(new Action.IOAction(new Action.SubmitDeleteSong(id))))))(Pux_Html_Elements.input([ Pux_Html_Attributes.type_("submit"), Pux_Html_Attributes.value("delete this song") ])([  ]));
};
var songPageHeader = function (v) {
    return function (v1) {
        if (v instanceof Route.SongPage) {
            return Pux_Html.withChild(Pux_Html_Elements.header)(Pux_Html.withChild(Pux_Html_Elements.nav)(Pux_Html.bind(searchForm(v1.searchQuery))(function () {
                return Pux_Html.bind(Pux_Html.withChild(Pux_Router.link("/update/" + Data_Show.show(Data_Show.showInt)(v.value0)))(Pux_Html_Elements.text("edit this song")))(function () {
                    return Pux_Html.bind(Pux_Html.withChild(Pux_Router.link("/new"))(Pux_Html_Elements.text("add a new song")))(function () {
                        return Pux_Html.bind(deleteSongForm(v.value0))(function () {
                            return Pux_Html.bind(Pux_Html_Elements.input([ Pux_Html_Attributes.type_("button"), Pux_Html_Attributes.value("fullscreen"), Pux_Html_Events.onClick(function (v2) {
                                return new Action.UIAction(Action.MkSongFullscreen.value);
                            }) ])([  ]))(function () {
                                return Pux_Html.withChild(Pux_Html_Elements.div)(Pux_Html.bind(Pux_Html_Elements.input([ Pux_Html_Attributes.type_("checkbox"), Pux_Html_Attributes.id_("song-meta-toggle"), Pux_Html_Attributes.checked(v1.showSongMeta), Pux_Html_Events.onChange(function (v2) {
                                    return new Action.UIAction(Action.ToggleShowSongMeta.value);
                                }) ])([  ]))(function () {
                                    return Pux_Html.bind(Pux_Html_Elements.label([ Pux_Html_Attributes.htmlFor("song-meta-toggle") ])([ Pux_Html_Elements.text("show song meta") ]))(function () {
                                        return Pux_Html.bind(Pux_Html_Elements.input([ Pux_Html_Attributes.type_("checkbox"), Pux_Html_Attributes.id_("duplicated-chords-toggle"), Pux_Html_Attributes.checked(v1.showDuplicatedChorus), Pux_Html_Events.onChange(function (v2) {
                                            return new Action.UIAction(Action.ToggleShowDuplicatedChorus.value);
                                        }) ])([  ]))(function () {
                                            return Pux_Html_Elements.label([ Pux_Html_Attributes.htmlFor("duplicated-chords-toggle") ])([ Pux_Html_Elements.text("show song duplicated chorus") ]);
                                        });
                                    });
                                }));
                            });
                        });
                    });
                });
            })));
        };
        return Pux_Html.withChild(Pux_Html_Elements.header)(Pux_Html.withChild(Pux_Html_Elements.nav)(searchForm(v1.searchQuery)));
    };
};
var songPage = function (r) {
    return function (io) {
        return function (ui) {
            return Pux_Html.withChild(Pux_Html_Elements.div)(Pux_Html.bind(songPageHeader(r)(ui))(function () {
                return songPageContent(io)(ui);
            }));
        };
    };
};
var page = function (v) {
    return function (v1) {
        if (v instanceof Route.SongPage) {
            return songPage(v1.currentPage)(v1.io)(v1.ui);
        };
        if (v instanceof Route.SearchResultPage) {
            return searchResultPage(v1);
        };
        if (v instanceof Route.HomePage) {
            return homePage(v1);
        };
        if (v instanceof Route.NewSongPage) {
            return newSongPage(v1);
        };
        if (v instanceof Route.UpdateSongPage) {
            return updateSongPage(v.value0)(v1);
        };
        if (v instanceof Route.NotFoundPage) {
            return notFoundPage;
        };
        throw new Error("Failed pattern match at View line 26, column 1 - line 26, column 79: " + [ v.constructor.name, v1.constructor.name ]);
    };
};
var view = function (v) {
    return Pux_Html_Elements.div([  ])([ page(v.currentPage)(v) ]);
};
module.exports = {
    deleteSongForm: deleteSongForm, 
    header_: header_, 
    homePage: homePage, 
    newSongForm: newSongForm, 
    newSongPage: newSongPage, 
    newSongPageHeader: newSongPageHeader, 
    notFoundPage: notFoundPage, 
    page: page, 
    searchForm: searchForm, 
    searchResult: searchResult, 
    searchResultPage: searchResultPage, 
    searchResultPageContent: searchResultPageContent, 
    songContent: songContent, 
    songLyric: songLyric, 
    songMeta: songMeta, 
    songPage: songPage, 
    songPageContent: songPageContent, 
    songPageHeader: songPageHeader, 
    songSection: songSection, 
    updateSongForm: updateSongForm, 
    updateSongPage: updateSongPage, 
    view: view
};
