// Generated by psc version 0.9.3
"use strict";
var Prelude = require("../Prelude");
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Lazy = require("../Control.Lazy");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_MonadPlus = require("../Control.MonadPlus");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Plus = require("../Control.Plus");
var Data_Array = require("../Data.Array");
var Data_List = require("../Data.List");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Profunctor = require("../Data.Profunctor");
var Data_Profunctor_Strong = require("../Data.Profunctor.Strong");
var Data_Tuple = require("../Data.Tuple");
var Data_Functor = require("../Data.Functor");
var Data_Function = require("../Data.Function");
var Control_Apply = require("../Control.Apply");
var Control_Applicative = require("../Control.Applicative");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Semigroup = require("../Data.Semigroup");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Monad = require("../Control.Monad");
var Data_Unit = require("../Data.Unit");
var Data_Ring = require("../Data.Ring");
var Data_Ord = require("../Data.Ord");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Semiring = require("../Data.Semiring");
var MealyT = function (x) {
    return x;
};
var Emit = (function () {
    function Emit(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Emit.create = function (value0) {
        return function (value1) {
            return new Emit(value0, value1);
        };
    };
    return Emit;
})();
var Halt = (function () {
    function Halt() {

    };
    Halt.value = new Halt();
    return Halt;
})();
var stepMealy = function (dictMonad) {
    return function (s) {
        return function (v) {
            return Data_Function.apply(Control_Bind.join(dictMonad["__superclass_Control.Bind.Bind_1"]()))(Control_Apply.apply((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())(v)(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(s)));
        };
    };
};
var runMealyT = function (v) {
    return v;
};
var runMealy = function (dictMonad) {
    return function (m) {
        var f = function (v) {
            if (v instanceof Halt) {
                return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(Data_Unit.unit);
            };
            if (v instanceof Emit) {
                return runMealy(dictMonad)(v.value1);
            };
            throw new Error("Failed pattern match at Data.Machine.Mealy line 66, column 23 - line 66, column 48: " + [ v.constructor.name ]);
        };
        return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(stepMealy(dictMonad)(Data_Unit.unit)(m))(f);
    };
};
var pureMealy = function (dictApplicative) {
    return function (f) {
        return Data_Function.apply(MealyT)(Control_Applicative.pure(dictApplicative)(function (s) {
            return Data_Function.apply(Control_Applicative.pure(dictApplicative))(f(s));
        }));
    };
};
var mealy = function (dictApplicative) {
    return function (f) {
        return Data_Function.apply(MealyT)(Control_Applicative.pure(dictApplicative)(f));
    };
};
var profunctorMealy = function (dictMonad) {
    return new Data_Profunctor.Profunctor(function (l) {
        return function (r) {
            var remap = function (m) {
                var g = function (v) {
                    if (v instanceof Emit) {
                        return new Emit(r(v.value0), remap(v.value1));
                    };
                    if (v instanceof Halt) {
                        return Halt.value;
                    };
                    throw new Error("Failed pattern match at Data.Machine.Mealy line 173, column 17 - line 173, column 54: " + [ v.constructor.name ]);
                };
                return Data_Function.apply(mealy(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(function (s) {
                    return Data_Functor.map(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(g)(stepMealy(dictMonad)(l(s))(m));
                });
            };
            return remap;
        };
    });
};
var scanl = function (dictMonad) {
    return function (f) {
        var go = function (b) {
            return function (m) {
                return Data_Function.apply(mealy(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(function (s) {
                    var g = function (v) {
                        if (v instanceof Halt) {
                            return Halt.value;
                        };
                        if (v instanceof Emit) {
                            var b$prime = f(b)(v.value0);
                            return new Emit(b$prime, go(b$prime)(v.value1));
                        };
                        throw new Error("Failed pattern match at Data.Machine.Mealy line 107, column 33 - line 107, column 53: " + [ v.constructor.name ]);
                    };
                    return Data_Functor.map(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(g)(stepMealy(dictMonad)(s)(m));
                });
            };
        };
        return go;
    };
};
var semigroupMealy = function (dictMonad) {
    return new Data_Semigroup.Semigroup(function (l) {
        return function (r) {
            return Data_Function.apply(mealy(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(function (s) {
                var g = function (v) {
                    if (v instanceof Emit) {
                        return Data_Function.apply(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(new Emit(v.value0, Data_Semigroup.append(semigroupMealy(dictMonad))(v.value1)(r)));
                    };
                    if (v instanceof Halt) {
                        return stepMealy(dictMonad)(s)(r);
                    };
                    throw new Error("Failed pattern match at Data.Machine.Mealy line 185, column 35 - line 185, column 74: " + [ v.constructor.name ]);
                };
                return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(stepMealy(dictMonad)(s)(l))(g);
            });
        };
    });
};
var monoidMealy = function (dictMonad) {
    return new Data_Monoid.Monoid(function () {
        return semigroupMealy(dictMonad);
    }, Data_Function.apply(mealy(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(function (s) {
        return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(Halt.value);
    }));
};
var semigroupoidMealy = function (dictMonad) {
    return new Control_Semigroupoid.Semigroupoid(function (f) {
        return function (g) {
            var gb = function (v) {
                if (v instanceof Halt) {
                    return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(Halt.value);
                };
                if (v instanceof Emit) {
                    var fc = function (v1) {
                        if (v1 instanceof Emit) {
                            return new Emit(v1.value0, Control_Semigroupoid.compose(semigroupoidMealy(dictMonad))(v1.value1)(v.value1));
                        };
                        if (v1 instanceof Halt) {
                            return Halt.value;
                        };
                        throw new Error("Failed pattern match at Data.Machine.Mealy line 198, column 13 - line 198, column 48: " + [ v1.constructor.name ]);
                    };
                    return Data_Functor.map(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(fc)(stepMealy(dictMonad)(v.value0)(f));
                };
                throw new Error("Failed pattern match at Data.Machine.Mealy line 195, column 11 - line 195, column 30: " + [ v.constructor.name ]);
            };
            return Data_Function.apply(mealy(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(function (b) {
                return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(stepMealy(dictMonad)(b)(g))(gb);
            });
        };
    });
};
var sink = function (dictMonad) {
    return function (f) {
        return Data_Function.apply(mealy(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(function (a) {
            return Data_Functor.map(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Function["const"](new Emit(Data_Unit.unit, sink(dictMonad)(f))))(f(a));
        });
    };
};
var source = function (dictMonad) {
    return function (src) {
        return Data_Function.apply(mealy(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(function (v) {
            return Data_Functor.map(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Function.flip(Emit.create)(source(dictMonad)(src)))(src);
        });
    };
};
var strongMealy = function (dictMonad) {
    return new Data_Profunctor_Strong.Strong(function () {
        return profunctorMealy(dictMonad);
    }, function (m) {
        return Data_Function.apply(mealy(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(function (s) {
            var d = Data_Tuple.snd(s);
            var g = function (v) {
                if (v instanceof Emit) {
                    return new Emit(new Data_Tuple.Tuple(v.value0, d), Data_Profunctor_Strong.first(strongMealy(dictMonad))(v.value1));
                };
                if (v instanceof Halt) {
                    return Halt.value;
                };
                throw new Error("Failed pattern match at Data.Machine.Mealy line 177, column 27 - line 181, column 50: " + [ v.constructor.name ]);
            };
            var b = Data_Tuple.fst(s);
            return Data_Functor.map(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(g)(stepMealy(dictMonad)(b)(m));
        });
    }, function ($136) {
        return Data_Profunctor.dimap(profunctorMealy(dictMonad))(Data_Tuple.swap)(Data_Tuple.swap)(Data_Profunctor_Strong.first(strongMealy(dictMonad))($136));
    });
};
var loop = function (dictMonad) {
    return function (m) {
        var loop$prime = function (m1) {
            return Data_Function.apply(mealy(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(function (s) {
                var f = function (v) {
                    if (v instanceof Halt) {
                        return stepMealy(dictMonad)(s)(loop(dictMonad)(m));
                    };
                    if (v instanceof Emit) {
                        return Data_Function.apply(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(new Emit(v.value0, loop$prime(v.value1)));
                    };
                    throw new Error("Failed pattern match at Data.Machine.Mealy line 96, column 37 - line 96, column 73: " + [ v.constructor.name ]);
                };
                return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(stepMealy(dictMonad)(s)(m1))(f);
            });
        };
        return loop$prime(m);
    };
};
var lazyMealy = function (dictMonad) {
    return new Control_Lazy.Lazy(function (f) {
        return mealy(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(function (s) {
            return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(runMealyT(f(Data_Unit.unit)))(function (v) {
                return Data_Function.apply(v)(s);
            });
        });
    });
};
var interleave = function (dictMonad) {
    return function (m1) {
        return function (m2) {
            return Data_Function.apply(mealy(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(function (s) {
                var f = function (v) {
                    if (v instanceof Halt) {
                        return stepMealy(dictMonad)(s)(m2);
                    };
                    if (v instanceof Emit) {
                        return Data_Function.apply(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(new Emit(v.value0, interleave(dictMonad)(m2)(v.value1)));
                    };
                    throw new Error("Failed pattern match at Data.Machine.Mealy line 137, column 39 - line 137, column 69: " + [ v.constructor.name ]);
                };
                return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(stepMealy(dictMonad)(s)(m1))(f);
            });
        };
    };
};
var ifte = function (dictMonad) {
    return function (ma) {
        return function (f) {
            return function (mb) {
                return Data_Function.apply(mealy(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(function (s) {
                    var h = function (ma1) {
                        return function (v) {
                            if (v instanceof Halt) {
                                return Halt.value;
                            };
                            if (v instanceof Emit) {
                                return new Emit(v.value0, Data_Semigroup.append(semigroupMealy(dictMonad))(v.value1)(ifte(dictMonad)(ma1)(f)(mb)));
                            };
                            throw new Error("Failed pattern match at Data.Machine.Mealy line 145, column 35 - line 145, column 65: " + [ ma1.constructor.name, v.constructor.name ]);
                        };
                    };
                    var g = function (v) {
                        if (v instanceof Halt) {
                            return stepMealy(dictMonad)(s)(mb);
                        };
                        if (v instanceof Emit) {
                            return Data_Functor.map(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(h(v.value1))(stepMealy(dictMonad)(s)(f(v.value0)));
                        };
                        throw new Error("Failed pattern match at Data.Machine.Mealy line 145, column 31 - line 151, column 55: " + [ v.constructor.name ]);
                    };
                    return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(stepMealy(dictMonad)(s)(ma))(g);
                });
            };
        };
    };
};
var halt = function (dictApplicative) {
    return Data_Function.apply(pureMealy(dictApplicative))(Data_Function["const"](Halt.value));
};
var msplit = function (dictMonad) {
    return function (m) {
        var f = function (v) {
            if (v instanceof Halt) {
                return new Emit(Data_Maybe.Nothing.value, halt(dictMonad["__superclass_Control.Applicative.Applicative_0"]()));
            };
            if (v instanceof Emit) {
                return new Emit(Data_Function.apply(Data_Maybe.Just.create)(new Data_Tuple.Tuple(v.value0, v.value1)), msplit(dictMonad)(v.value1));
            };
            throw new Error("Failed pattern match at Data.Machine.Mealy line 133, column 9 - line 133, column 45: " + [ v.constructor.name ]);
        };
        return Data_Function.apply(mealy(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(function (s) {
            return Data_Functor.map(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(f)(stepMealy(dictMonad)(s)(m));
        });
    };
};
var singleton = function (dictMonad) {
    return function (a) {
        return Data_Function.apply(pureMealy(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(function (s) {
            return new Emit(a, halt(dictMonad["__superclass_Control.Applicative.Applicative_0"]()));
        });
    };
};
var take = function (dictMonad) {
    return function (n) {
        return function (m) {
            var f = function (v) {
                if (v instanceof Halt) {
                    return Halt.value;
                };
                if (v instanceof Emit) {
                    return new Emit(v.value0, take(dictMonad)(n - 1)(v.value1));
                };
                throw new Error("Failed pattern match at Data.Machine.Mealy line 84, column 41 - line 84, column 61: " + [ v.constructor.name ]);
            };
            var $110 = n <= 0;
            if ($110) {
                return halt(dictMonad["__superclass_Control.Applicative.Applicative_0"]());
            };
            if (!$110) {
                return Data_Function.apply(mealy(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(function (s) {
                    return Data_Functor.map(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(f)(stepMealy(dictMonad)(s)(m));
                });
            };
            throw new Error("Failed pattern match at Data.Machine.Mealy line 82, column 13 - line 83, column 54: " + [ $110.constructor.name ]);
        };
    };
};
var once = function (dictMonad) {
    return take(dictMonad)(1);
};
var when = function (dictMonad) {
    return function (ma) {
        return function (f) {
            return ifte(dictMonad)(ma)(f)(halt(dictMonad["__superclass_Control.Applicative.Applicative_0"]()));
        };
    };
};
var wrapEffect = function (dictMonad) {
    return function (fa) {
        return Data_Function.apply(function ($137) {
            return MealyT(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())($137));
        })(Data_Function["const"](Data_Functor.map(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Function.flip(Emit.create)(halt(dictMonad["__superclass_Control.Applicative.Applicative_0"]())))(fa)));
    };
};
var functorMealy = function (dictMonad) {
    return new Data_Functor.Functor(function (f) {
        return function (m) {
            var g = function (v) {
                if (v instanceof Emit) {
                    return new Emit(f(v.value0), Data_Functor.map(functorMealy(dictMonad))(f)(v.value1));
                };
                if (v instanceof Halt) {
                    return Halt.value;
                };
                throw new Error("Failed pattern match at Data.Machine.Mealy line 158, column 5 - line 158, column 42: " + [ v.constructor.name ]);
            };
            return Data_Function.apply(mealy(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(function (s) {
                return Data_Functor.map(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(g)(stepMealy(dictMonad)(s)(m));
            });
        };
    });
};
var fromMaybe = function (dictMonad) {
    return function (v) {
        if (v instanceof Data_Maybe.Nothing) {
            return halt(dictMonad["__superclass_Control.Applicative.Applicative_0"]());
        };
        if (v instanceof Data_Maybe.Just) {
            return singleton(dictMonad)(v.value0);
        };
        throw new Error("Failed pattern match at Data.Machine.Mealy line 118, column 1 - line 118, column 26: " + [ v.constructor.name ]);
    };
};
var fromArray = function (dictMonad) {
    return function (a) {
        var len = Data_Array.length(a);
        var go = function (n) {
            if (n < 0 || n >= len) {
                return halt(dictMonad["__superclass_Control.Applicative.Applicative_0"]());
            };
            return Data_Semigroup.append(semigroupMealy(dictMonad))(fromMaybe(dictMonad)(Data_Array.index(a)(n)))(go(n + 1 | 0));
        };
        return go(0);
    };
};
var drop = function (dictMonad) {
    return function (n) {
        return function (m) {
            var $117 = n <= 0;
            if ($117) {
                return m;
            };
            if (!$117) {
                return Data_Function.apply(mealy(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(function (s) {
                    var f = function (v) {
                        if (v instanceof Halt) {
                            return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(Halt.value);
                        };
                        if (v instanceof Emit) {
                            return stepMealy(dictMonad)(s)(drop(dictMonad)(n - 1)(v.value1));
                        };
                        throw new Error("Failed pattern match at Data.Machine.Mealy line 89, column 39 - line 89, column 64: " + [ v.constructor.name ]);
                    };
                    return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(stepMealy(dictMonad)(s)(m))(f);
                });
            };
            throw new Error("Failed pattern match at Data.Machine.Mealy line 88, column 13 - line 91, column 58: " + [ $117.constructor.name ]);
        };
    };
};
var collect = function (dictMonad) {
    return scanl(dictMonad)(Data_Function.flip(Data_List.Cons.create))(Data_List.Nil.value);
};
var categoryMealy = function (dictMonad) {
    return new Control_Category.Category(function () {
        return semigroupoidMealy(dictMonad);
    }, Data_Function.apply(pureMealy(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(function (t) {
        return new Emit(t, halt(dictMonad["__superclass_Control.Applicative.Applicative_0"]()));
    }));
};
var applyMealy = function (dictMonad) {
    return new Control_Apply.Apply(function () {
        return functorMealy(dictMonad);
    }, function (f) {
        return function (x) {
            return Data_Function.apply(mealy(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(function (s) {
                var ap = function (v) {
                    return function (v1) {
                        if (v instanceof Halt) {
                            return Halt.value;
                        };
                        if (v1 instanceof Halt) {
                            return Halt.value;
                        };
                        if (v instanceof Emit && v1 instanceof Emit) {
                            return new Emit(v.value0(v1.value0), Control_Apply.apply(applyMealy(dictMonad))(v.value1)(v1.value1));
                        };
                        throw new Error("Failed pattern match at Data.Machine.Mealy line 162, column 33 - line 162, column 49: " + [ v.constructor.name, v1.constructor.name ]);
                    };
                };
                return Control_Apply.apply((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())(Data_Functor.map(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(ap)(stepMealy(dictMonad)(s)(f)))(stepMealy(dictMonad)(s)(x));
            });
        };
    });
};
var bindMealy = function (dictMonad) {
    return new Control_Bind.Bind(function () {
        return applyMealy(dictMonad);
    }, function (m) {
        return function (f) {
            return Data_Function.apply(mealy(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(function (s) {
                var g = function (v) {
                    if (v instanceof Emit) {
                        var h = function (v1) {
                            if (v1 instanceof Emit) {
                                return new Emit(v1.value0, Data_Semigroup.append(semigroupMealy(dictMonad))(v1.value1)(Control_Bind.bind(bindMealy(dictMonad))(v.value1)(f)));
                            };
                            if (v1 instanceof Halt) {
                                return Halt.value;
                            };
                            throw new Error("Failed pattern match at Data.Machine.Mealy line 207, column 34 - line 207, column 75: " + [ v1.constructor.name ]);
                        };
                        return Data_Functor.map(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(h)(stepMealy(dictMonad)(s)(f(v.value0)));
                    };
                    if (v instanceof Halt) {
                        return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(Halt.value);
                    };
                    throw new Error("Failed pattern match at Data.Machine.Mealy line 205, column 32 - line 208, column 54: " + [ v.constructor.name ]);
                };
                return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(stepMealy(dictMonad)(s)(m))(g);
            });
        };
    });
};
var zipWith = function (dictMonad) {
    return function (f) {
        return function (a) {
            return function (b) {
                return Control_Apply.apply(applyMealy(dictMonad))(Data_Functor.map(functorMealy(dictMonad))(f)(a))(b);
            };
        };
    };
};
var applicativeMealy = function (dictMonad) {
    return new Control_Applicative.Applicative(function () {
        return applyMealy(dictMonad);
    }, function (t) {
        return Data_Function.apply(pureMealy(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(function (s) {
            return new Emit(t, halt(dictMonad["__superclass_Control.Applicative.Applicative_0"]()));
        });
    });
};
var monadMealy = function (dictMonad) {
    return new Control_Monad.Monad(function () {
        return applicativeMealy(dictMonad);
    }, function () {
        return bindMealy(dictMonad);
    });
};
var monadEffMealy = function (dictMonad) {
    return function (dictMonadEff) {
        return new Control_Monad_Eff_Class.MonadEff(function () {
            return monadMealy(dictMonad);
        }, function ($138) {
            return wrapEffect(dictMonad)(Control_Monad_Eff_Class.liftEff(dictMonadEff)($138));
        });
    };
};
var altMealy = function (dictMonad) {
    return new Control_Alt.Alt(function () {
        return functorMealy(dictMonad);
    }, function (x) {
        return function (y) {
            return Data_Function.apply(mealy(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(function (s) {
                var f = function (v) {
                    if (v instanceof Halt) {
                        return stepMealy(dictMonad)(s)(y);
                    };
                    if (v instanceof Emit) {
                        return Data_Function.apply(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(new Emit(v.value0, v.value1));
                    };
                    throw new Error("Failed pattern match at Data.Machine.Mealy line 215, column 31 - line 215, column 61: " + [ v.constructor.name ]);
                };
                return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(stepMealy(dictMonad)(s)(x))(f);
            });
        };
    });
};
var plusMealy = function (dictMonad) {
    return new Control_Plus.Plus(function () {
        return altMealy(dictMonad);
    }, halt(dictMonad["__superclass_Control.Applicative.Applicative_0"]()));
};
var alternativeMealy = function (dictMonad) {
    return new Control_Alternative.Alternative(function () {
        return applicativeMealy(dictMonad);
    }, function () {
        return plusMealy(dictMonad);
    });
};
var monadZero = function (dictMonad) {
    return new Control_MonadZero.MonadZero(function () {
        return alternativeMealy(dictMonad);
    }, function () {
        return monadMealy(dictMonad);
    });
};
var monadPlus = function (dictMonad) {
    return new Control_MonadPlus.MonadPlus(function () {
        return monadZero(dictMonad);
    });
};
module.exports = {
    Emit: Emit, 
    Halt: Halt, 
    collect: collect, 
    drop: drop, 
    fromArray: fromArray, 
    fromMaybe: fromMaybe, 
    halt: halt, 
    ifte: ifte, 
    interleave: interleave, 
    loop: loop, 
    mealy: mealy, 
    msplit: msplit, 
    pureMealy: pureMealy, 
    runMealy: runMealy, 
    runMealyT: runMealyT, 
    scanl: scanl, 
    singleton: singleton, 
    sink: sink, 
    source: source, 
    stepMealy: stepMealy, 
    take: take, 
    when: when, 
    wrapEffect: wrapEffect, 
    zipWith: zipWith, 
    functorMealy: functorMealy, 
    applyMealy: applyMealy, 
    applicativeMealy: applicativeMealy, 
    profunctorMealy: profunctorMealy, 
    strongMealy: strongMealy, 
    semigroupMealy: semigroupMealy, 
    monoidMealy: monoidMealy, 
    semigroupoidMealy: semigroupoidMealy, 
    categoryMealy: categoryMealy, 
    bindMealy: bindMealy, 
    monadMealy: monadMealy, 
    altMealy: altMealy, 
    plusMealy: plusMealy, 
    alternativeMealy: alternativeMealy, 
    monadZero: monadZero, 
    monadPlus: monadPlus, 
    monadEffMealy: monadEffMealy, 
    lazyMealy: lazyMealy
};
