// Generated by psc version 0.9.3
"use strict";
var $foreign = require("./foreign");
var Prelude = require("../Prelude");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Data_Either = require("../Data.Either");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_Array = require("../Data.Array");
var Data_Foreign = require("../Data.Foreign");
var Data_Foreign_Class = require("../Data.Foreign.Class");
var Data_Maybe = require("../Data.Maybe");
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Eff_Exception = require("../Control.Monad.Eff.Exception");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var Data_Traversable = require("../Data.Traversable");
var Database_Postgres_SqlValue = require("../Database.Postgres.SqlValue");
var Control_Bind = require("../Control.Bind");
var Data_Function = require("../Data.Function");
var Control_Applicative = require("../Control.Applicative");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_Functor = require("../Data.Functor");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Query = function (x) {
    return x;
};
var queryValue = function (dictIsForeign) {
    return function (v) {
        return function (params) {
            return function (client) {
                return Control_Bind.bind(Control_Monad_Aff.bindAff)($foreign.runQueryValue(v)(params)(client))(function (v1) {
                    return Data_Function.apply(Control_Applicative.pure(Control_Monad_Aff.applicativeAff))(Data_Either.either(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create)(Data_Foreign_Class.read(dictIsForeign)(v1)));
                });
            };
        };
    };
};
var mkConnectionString = function (ci) {
    return "postgres://" + (ci.user + (":" + (ci.password + ("@" + (ci.host + (":" + (Data_Show.show(Data_Show.showInt)(ci.port) + ("/" + ci.db))))))));
};
var withClient = function (info) {
    return function (p) {
        return $foreign._withClient(mkConnectionString(info), p);
    };
};
var liftError = function (err) {
    return Data_Function.apply(Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadErrorAff))(Control_Monad_Eff_Exception.error(Data_Show.show(Data_Foreign.showForeignError)(err)));
};
var query = function (dictIsForeign) {
    return function (v) {
        return function (params) {
            return function (client) {
                return Control_Bind.bind(Control_Monad_Aff.bindAff)($foreign.runQuery(v)(params)(client))(function (v1) {
                    return Data_Either.either(liftError)(Control_Applicative.pure(Control_Monad_Aff.applicativeAff))(Data_Function.apply(Data_Traversable.sequence(Data_Traversable.traversableArray)(Data_Either.applicativeEither))(Data_Functor.map(Data_Functor.functorArray)(Data_Foreign_Class.read(dictIsForeign))(v1)));
                });
            };
        };
    };
};
var queryOne = function (dictIsForeign) {
    return function (v) {
        return function (params) {
            return function (client) {
                return Control_Bind.bind(Control_Monad_Aff.bindAff)($foreign.runQuery(v)(params)(client))(function (v1) {
                    return Data_Function.apply(Data_Maybe.maybe(Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Maybe.Nothing.value))(Data_Either.either(liftError)(function ($48) {
                        return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Maybe.Just.create($48));
                    })))(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Foreign_Class.read(dictIsForeign))(Data_Array.index(v1)(0)));
                });
            };
        };
    };
};
var queryOne_ = function (dictIsForeign) {
    return function (v) {
        return function (client) {
            return Control_Bind.bind(Control_Monad_Aff.bindAff)($foreign.runQuery_(v)(client))(function (v1) {
                return Data_Function.apply(Data_Maybe.maybe(Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Maybe.Nothing.value))(Data_Either.either(liftError)(function ($49) {
                    return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Maybe.Just.create($49));
                })))(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Foreign_Class.read(dictIsForeign))(Data_Array.index(v1)(0)));
            });
        };
    };
};
var queryValue_ = function (dictIsForeign) {
    return function (v) {
        return function (client) {
            return Control_Bind.bind(Control_Monad_Aff.bindAff)($foreign.runQueryValue_(v)(client))(function (v1) {
                return Data_Function.apply(Data_Either.either(liftError)(function ($50) {
                    return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Maybe.Just.create($50));
                }))(Data_Foreign_Class.read(dictIsForeign)(v1));
            });
        };
    };
};
var query_ = function (dictIsForeign) {
    return function (v) {
        return function (client) {
            return Control_Bind.bind(Control_Monad_Aff.bindAff)($foreign.runQuery_(v)(client))(function (v1) {
                return Data_Either.either(liftError)(Control_Applicative.pure(Control_Monad_Aff.applicativeAff))(Data_Function.apply(Data_Traversable.sequence(Data_Traversable.traversableArray)(Data_Either.applicativeEither))(Data_Functor.map(Data_Functor.functorArray)(Data_Foreign_Class.read(dictIsForeign))(v1)));
            });
        };
    };
};
var execute_ = function (v) {
    return function (client) {
        return Data_Function.apply(Data_Functor["void"](Control_Monad_Aff.functorAff))($foreign.runQuery_(v)(client));
    };
};
var execute = function (v) {
    return function (params) {
        return function (client) {
            return Data_Function.apply(Data_Functor["void"](Control_Monad_Aff.functorAff))($foreign.runQuery(v)(params)(client));
        };
    };
};
var connect = function ($51) {
    return $foreign["connect'"](mkConnectionString($51));
};
var withConnection = function (info) {
    return function (p) {
        return Control_Bind.bind(Control_Monad_Aff.bindAff)(connect(info))(function (v) {
            return Data_Function.apply(Control_Monad_Aff["finally"](p(v)))(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)($foreign.end(v)));
        });
    };
};
module.exports = {
    Query: Query, 
    connect: connect, 
    execute: execute, 
    execute_: execute_, 
    mkConnectionString: mkConnectionString, 
    query: query, 
    queryOne: queryOne, 
    queryOne_: queryOne_, 
    queryValue: queryValue, 
    queryValue_: queryValue_, 
    query_: query_, 
    withClient: withClient, 
    withConnection: withConnection, 
    disconnect: $foreign.disconnect, 
    end: $foreign.end
};
