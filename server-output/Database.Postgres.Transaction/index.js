// Generated by psc version 0.9.3
"use strict";
var Prelude = require("../Prelude");
var Control_Apply = require("../Control.Apply");
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var Data_Either = require("../Data.Either");
var Database_Postgres = require("../Database.Postgres");
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var rollback = Database_Postgres.execute_("ROLLBACK");
var commit = Database_Postgres.execute_("COMMIT");
var begin = Database_Postgres.execute_("BEGIN TRANSACTION");
var withTransaction = function (act) {
    return function (client) {
        var rollback_ = function (err) {
            return Control_Apply.applySecond(Control_Monad_Aff.applyAff)(rollback(client))(Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadErrorAff)(err));
        };
        var commit_ = function (v) {
            return Control_Apply.applySecond(Control_Monad_Aff.applyAff)(commit(client))(Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v));
        };
        return Control_Bind.bind(Control_Monad_Aff.bindAff)(begin(client))(function () {
            return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff.attempt(act(client)))(function (v) {
                return Data_Either.either(rollback_)(commit_)(v);
            });
        });
    };
};
module.exports = {
    begin: begin, 
    commit: commit, 
    rollback: rollback, 
    withTransaction: withTransaction
};
