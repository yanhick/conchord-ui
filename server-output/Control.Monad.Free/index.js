// Generated by psc version 0.9.3
"use strict";
var Prelude = require("../Prelude");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_Monad_Trans = require("../Control.Monad.Trans");
var Data_CatList = require("../Data.CatList");
var Data_Either = require("../Data.Either");
var Data_Inject = require("../Data.Inject");
var Data_Maybe = require("../Data.Maybe");
var Data_Tuple = require("../Data.Tuple");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var Data_Functor = require("../Data.Functor");
var Control_Bind = require("../Control.Bind");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Monad = require("../Control.Monad");
var Data_Semigroup = require("../Data.Semigroup");
var ExpF = function (x) {
    return x;
};
var Free = (function () {
    function Free(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Free.create = function (value0) {
        return function (value1) {
            return new Free(value0, value1);
        };
    };
    return Free;
})();
var Return = (function () {
    function Return(value0) {
        this.value0 = value0;
    };
    Return.create = function (value0) {
        return new Return(value0);
    };
    return Return;
})();
var Bind = (function () {
    function Bind(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Bind.create = function (value0) {
        return function (value1) {
            return new Bind(value0, value1);
        };
    };
    return Bind;
})();
var toView = function (__copy_v) {
    var v = __copy_v;
    tco: while (true) {
        var runExpF = function (v2) {
            return v2;
        };
        var concatF = function (v2) {
            return function (r) {
                return new Free(v2.value0, Data_Semigroup.append(Data_CatList.semigroupCatList)(v2.value1)(r));
            };
        };
        if (v.value0 instanceof Return) {
            var $20 = Data_CatList.uncons(v.value1);
            if ($20 instanceof Data_Maybe.Nothing) {
                return new Return(Unsafe_Coerce.unsafeCoerce(v.value0.value0));
            };
            if ($20 instanceof Data_Maybe.Just) {
                var __tco_v = Unsafe_Coerce.unsafeCoerce(concatF(runExpF($20.value0.value0)(v.value0.value0))($20.value0.value1));
                v = __tco_v;
                continue tco;
            };
            throw new Error("Failed pattern match at Control.Monad.Free line 171, column 7 - line 175, column 64: " + [ $20.constructor.name ]);
        };
        if (v.value0 instanceof Bind) {
            return new Bind(v.value0.value0, function (a) {
                return Unsafe_Coerce.unsafeCoerce(concatF(v.value0.value1(a))(v.value1));
            });
        };
        throw new Error("Failed pattern match at Control.Monad.Free line 169, column 3 - line 177, column 56: " + [ v.value0.constructor.name ]);
    };
};
var runFreeM = function (dictFunctor) {
    return function (dictMonadRec) {
        return function (k) {
            var go = function (f) {
                var $29 = toView(f);
                if ($29 instanceof Return) {
                    return Data_Functor.map((((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Either.Right.create)(Control_Applicative.pure((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())($29.value0));
                };
                if ($29 instanceof Bind) {
                    return Data_Functor.map((((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Either.Left.create)(k(Data_Functor.map(dictFunctor)($29.value1)($29.value0)));
                };
                throw new Error("Failed pattern match at Control.Monad.Free line 147, column 10 - line 149, column 37: " + [ $29.constructor.name ]);
            };
            return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go);
        };
    };
};
var runFree = function (dictFunctor) {
    return function (k) {
        var go = function (__copy_f) {
            var f = __copy_f;
            tco: while (true) {
                var $33 = toView(f);
                if ($33 instanceof Return) {
                    return $33.value0;
                };
                if ($33 instanceof Bind) {
                    var __tco_f = k(Data_Functor.map(dictFunctor)($33.value1)($33.value0));
                    f = __tco_f;
                    continue tco;
                };
                throw new Error("Failed pattern match at Control.Monad.Free line 132, column 10 - line 134, column 33: " + [ $33.constructor.name ]);
            };
        };
        return go;
    };
};
var resume = function (dictFunctor) {
    return function (f) {
        var $37 = toView(f);
        if ($37 instanceof Return) {
            return new Data_Either.Right($37.value0);
        };
        if ($37 instanceof Bind) {
            return new Data_Either.Left(Data_Functor.map(dictFunctor)($37.value1)($37.value0));
        };
        throw new Error("Failed pattern match at Control.Monad.Free line 157, column 12 - line 159, column 29: " + [ $37.constructor.name ]);
    };
};
var fromView = function (f) {
    return new Free(Unsafe_Coerce.unsafeCoerce(f), Data_CatList.empty);
};
var suspendF = function (dictApplicative) {
    return function (f) {
        return fromView(new Bind(Unsafe_Coerce.unsafeCoerce(Control_Applicative.pure(dictApplicative)(f)), Unsafe_Coerce.unsafeCoerce));
    };
};
var freeMonad = new Control_Monad.Monad(function () {
    return freeApplicative;
}, function () {
    return freeBind;
});
var freeFunctor = new Data_Functor.Functor(function (k) {
    return function (f) {
        return Control_Bind.bindFlipped(freeBind)(function ($53) {
            return Control_Applicative.pure(freeApplicative)(k($53));
        })(f);
    };
});
var freeBind = new Control_Bind.Bind(function () {
    return freeApply;
}, function (v) {
    return function (k) {
        return new Free(v.value0, Data_CatList.snoc(v.value1)(Unsafe_Coerce.unsafeCoerce(k)));
    };
});
var freeApply = new Control_Apply.Apply(function () {
    return freeFunctor;
}, Control_Monad.ap(freeMonad));
var freeApplicative = new Control_Applicative.Applicative(function () {
    return freeApply;
}, function ($54) {
    return fromView(Return.create($54));
});
var freeMonadRec = new Control_Monad_Rec_Class.MonadRec(function () {
    return freeMonad;
}, function (k) {
    return function (a) {
        return Control_Bind.bind(freeBind)(k(a))(Data_Either.either(Control_Monad_Rec_Class.tailRecM(freeMonadRec)(k))(Control_Applicative.pure(freeApplicative)));
    };
});
var liftF = function (f) {
    return fromView(new Bind(Unsafe_Coerce.unsafeCoerce(f), function ($55) {
        return Control_Applicative.pure(freeApplicative)(Unsafe_Coerce.unsafeCoerce($55));
    }));
};
var freeMonadTrans = new Control_Monad_Trans.MonadTrans(function (dictMonad) {
    return liftF;
});
var liftFI = function (dictInject) {
    return function (fa) {
        return liftF(Data_Inject.inj(dictInject)(fa));
    };
};
var substFree = function (k) {
    var go = function (f) {
        var $45 = toView(f);
        if ($45 instanceof Return) {
            return Control_Applicative.pure(freeApplicative)($45.value0);
        };
        if ($45 instanceof Bind) {
            return Control_Bind.bind(freeBind)(k($45.value0))(Data_Functor.map(Data_Functor.functorFn)(go)($45.value1));
        };
        throw new Error("Failed pattern match at Control.Monad.Free line 122, column 10 - line 124, column 33: " + [ $45.constructor.name ]);
    };
    return go;
};
var hoistFree = function (k) {
    return substFree(function ($56) {
        return liftF(k($56));
    });
};
var injF = function (dictInject) {
    return hoistFree(Data_Inject.inj(dictInject));
};
var foldFree = function (dictMonadRec) {
    return function (k) {
        var go = function (f) {
            var $49 = toView(f);
            if ($49 instanceof Return) {
                return Data_Functor.map((((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Either.Right.create)(Control_Applicative.pure((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())($49.value0));
            };
            if ($49 instanceof Bind) {
                return Data_Functor.map((((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(function ($57) {
                    return Data_Either.Left.create($49.value1($57));
                })(k($49.value0));
            };
            throw new Error("Failed pattern match at Control.Monad.Free line 112, column 10 - line 114, column 37: " + [ $49.constructor.name ]);
        };
        return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go);
    };
};
module.exports = {
    foldFree: foldFree, 
    hoistFree: hoistFree, 
    injF: injF, 
    liftF: liftF, 
    liftFI: liftFI, 
    resume: resume, 
    runFree: runFree, 
    runFreeM: runFreeM, 
    substFree: substFree, 
    suspendF: suspendF, 
    freeFunctor: freeFunctor, 
    freeBind: freeBind, 
    freeApplicative: freeApplicative, 
    freeApply: freeApply, 
    freeMonad: freeMonad, 
    freeMonadTrans: freeMonadTrans, 
    freeMonadRec: freeMonadRec
};
