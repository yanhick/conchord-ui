// Generated by psc version 0.9.3
"use strict";
var Prelude = require("../Prelude");
var Data_Either = require("../Data.Either");
var Data_Maybe = require("../Data.Maybe");
var Data_List = require("../Data.List");
var Data_Foldable = require("../Data.Foldable");
var Control_Alt = require("../Control.Alt");
var Control_Apply = require("../Control.Apply");
var Text_Parsing_StringParser = require("../Text.Parsing.StringParser");
var Control_Bind = require("../Control.Bind");
var Control_Applicative = require("../Control.Applicative");
var Data_Unit = require("../Data.Unit");
var Data_Functor = require("../Data.Functor");
var Data_Function = require("../Data.Function");
var withError = function (p) {
    return function (msg) {
        return Control_Alt.alt(Text_Parsing_StringParser.altParser)(p)(Text_Parsing_StringParser.fail(msg));
    };
};
var sepEndBy1 = function (p) {
    return function (sep) {
        return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(p)(function (v) {
            return Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Bind.bind(Text_Parsing_StringParser.bindParser)(sep)(function () {
                return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(sepEndBy(p)(sep))(function (v1) {
                    return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(new Data_List.Cons(v, v1));
                });
            }))(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Data_List.singleton(v)));
        });
    };
};
var sepEndBy = function (p) {
    return function (sep) {
        return Control_Alt.alt(Text_Parsing_StringParser.altParser)(sepEndBy1(p)(sep))(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Data_List.Nil.value));
    };
};
var optional = function (p) {
    return Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Bind.bind(Text_Parsing_StringParser.bindParser)(p)(function (v) {
        return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Data_Unit.unit);
    }))(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Data_Unit.unit));
};
var option = function (a) {
    return function (p) {
        return Control_Alt.alt(Text_Parsing_StringParser.altParser)(p)(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(a));
    };
};
var optionMaybe = function (p) {
    return option(Data_Maybe.Nothing.value)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Maybe.Just.create)(p));
};
var manyTill = function (p) {
    return function (end) {
        var scan = Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(end)(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Data_List.Nil.value)))(Control_Bind.bind(Text_Parsing_StringParser.bindParser)(p)(function (v) {
            return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(scan)(function (v1) {
                return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(new Data_List.Cons(v, v1));
            });
        }));
        return scan;
    };
};
var many1 = function (p) {
    return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(p)(function (v) {
        return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(many(p))(function (v1) {
            return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(new Data_List.Cons(v, v1));
        });
    });
};
var many = function (p) {
    return Control_Alt.alt(Text_Parsing_StringParser.altParser)(many1(p))(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Data_List.Nil.value));
};
var sepBy1 = function (p) {
    return function (sep) {
        return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(p)(function (v) {
            return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Data_Function.apply(many)(Control_Bind.bind(Text_Parsing_StringParser.bindParser)(sep)(function () {
                return p;
            })))(function (v1) {
                return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(new Data_List.Cons(v, v1));
            });
        });
    };
};
var sepBy = function (p) {
    return function (sep) {
        return Control_Alt.alt(Text_Parsing_StringParser.altParser)(sepBy1(p)(sep))(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Data_List.Nil.value));
    };
};
var lookAhead = function (v) {
    return new Text_Parsing_StringParser.Parser(function (s) {
        var $30 = v.value0(s);
        if ($30 instanceof Data_Either.Right) {
            return new Data_Either.Right({
                result: $30.value0.result, 
                suffix: s
            });
        };
        return $30;
    });
};
var fix = function (f) {
    return new Text_Parsing_StringParser.Parser(function (s) {
        return Text_Parsing_StringParser.unParser(f(fix(f)))(s);
    });
};
var endBy1 = function (p) {
    return function (sep) {
        return Data_Function.apply(many1)(Control_Bind.bind(Text_Parsing_StringParser.bindParser)(p)(function (v) {
            return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(sep)(function () {
                return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(v);
            });
        }));
    };
};
var endBy = function (p) {
    return function (sep) {
        return Data_Function.apply(many)(Control_Bind.bind(Text_Parsing_StringParser.bindParser)(p)(function (v) {
            return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(sep)(function () {
                return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(v);
            });
        }));
    };
};
var choice = function (dictFoldable) {
    return Data_Foldable.foldl(dictFoldable)(Control_Alt.alt(Text_Parsing_StringParser.altParser))(Text_Parsing_StringParser.fail("Nothing to parse"));
};
var chainr1$prime = function (p) {
    return function (f) {
        return function (a) {
            return Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Bind.bind(Text_Parsing_StringParser.bindParser)(f)(function (v) {
                return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(chainr1(p)(f))(function (v1) {
                    return Data_Function.apply(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser))(v(a)(v1));
                });
            }))(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(a));
        };
    };
};
var chainr1 = function (p) {
    return function (f) {
        return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(p)(function (v) {
            return chainr1$prime(p)(f)(v);
        });
    };
};
var chainr = function (p) {
    return function (f) {
        return function (a) {
            return Control_Alt.alt(Text_Parsing_StringParser.altParser)(chainr1(p)(f))(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(a));
        };
    };
};
var chainl1$prime = function (p) {
    return function (f) {
        return function (a) {
            return Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Bind.bind(Text_Parsing_StringParser.bindParser)(f)(function (v) {
                return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(p)(function (v1) {
                    return chainl1$prime(p)(f)(v(a)(v1));
                });
            }))(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(a));
        };
    };
};
var chainl1 = function (p) {
    return function (f) {
        return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(p)(function (v) {
            return chainl1$prime(p)(f)(v);
        });
    };
};
var chainl = function (p) {
    return function (f) {
        return function (a) {
            return Control_Alt.alt(Text_Parsing_StringParser.altParser)(chainl1(p)(f))(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(a));
        };
    };
};
var between = function (open) {
    return function (close) {
        return function (p) {
            return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(open)(function () {
                return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(p)(function (v) {
                    return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(close)(function () {
                        return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(v);
                    });
                });
            });
        };
    };
};
module.exports = {
    between: between, 
    chainl: chainl, 
    chainl1: chainl1, 
    "chainl1'": chainl1$prime, 
    chainr: chainr, 
    chainr1: chainr1, 
    "chainr1'": chainr1$prime, 
    choice: choice, 
    endBy: endBy, 
    endBy1: endBy1, 
    fix: fix, 
    lookAhead: lookAhead, 
    many: many, 
    many1: many1, 
    manyTill: manyTill, 
    option: option, 
    optionMaybe: optionMaybe, 
    optional: optional, 
    sepBy: sepBy, 
    sepBy1: sepBy1, 
    sepEndBy: sepEndBy, 
    sepEndBy1: sepEndBy1, 
    withError: withError
};
