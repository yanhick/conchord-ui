// Generated by psc version 0.9.3
"use strict";
var Prelude = require("../Prelude");
var Data_Lens_Internal_Shop = require("../Data.Lens.Internal.Shop");
var Data_Lens_Types = require("../Data.Lens.Types");
var Data_Profunctor = require("../Data.Profunctor");
var Data_Profunctor_Strong = require("../Data.Profunctor.Strong");
var Data_Tuple = require("../Data.Tuple");
var Control_Category = require("../Control.Category");
var withLens = function (l) {
    return function (f) {
        var $6 = l(new Data_Lens_Internal_Shop.Shop(Control_Category.id(Control_Category.categoryFn), function (v) {
            return function (b) {
                return b;
            };
        }));
        return f($6.value0)($6.value1);
    };
};
var lens$prime = function (to) {
    return function (dictStrong) {
        return function (pab) {
            return Data_Profunctor.dimap(dictStrong["__superclass_Data.Profunctor.Profunctor_0"]())(to)(function (v) {
                return v.value1(v.value0);
            })(Data_Profunctor_Strong.first(dictStrong)(pab));
        };
    };
};
var lens = function (get) {
    return function (set) {
        return function (dictStrong) {
            return lens$prime(function (s) {
                return new Data_Tuple.Tuple(get(s), function (b) {
                    return set(s)(b);
                });
            })(dictStrong);
        };
    };
};
var cloneLens = function (l) {
    return function (dictStrong) {
        return withLens(l)(function (x) {
            return function (y) {
                return function (p) {
                    return lens(x)(y)(dictStrong)(p);
                };
            };
        });
    };
};
module.exports = {
    cloneLens: cloneLens, 
    lens: lens, 
    "lens'": lens$prime, 
    withLens: withLens
};
