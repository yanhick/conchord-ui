// Generated by psc version 0.9.3
"use strict";
var $foreign = require("./foreign");
var Prelude = require("../Prelude");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Data_Maybe = require("../Data.Maybe");
var Data_Either = require("../Data.Either");
var Data_Tuple = require("../Data.Tuple");
var Data_String_Regex = require("../Data.String.Regex");
var Routing_Parser = require("../Routing.Parser");
var Routing_Match = require("../Routing.Match");
var Data_Function = require("../Data.Function");
var Control_Applicative = require("../Control.Applicative");
var Data_Unit = require("../Data.Unit");
var matchHash$prime = function (decoder) {
    return function (matcher) {
        return function (hash) {
            return Data_Function.apply(Routing_Match.runMatch(matcher))(Routing_Parser.parse(decoder)(hash));
        };
    };
};
var matchHash = matchHash$prime($foreign["decodeURIComponent"]);
var hashes = function (cb) {
    var dropHash = function (h) {
        var $1 = Data_String_Regex.regex("^[^#]*#")(Data_String_Regex.noFlags);
        if ($1 instanceof Data_Either.Right) {
            return Data_String_Regex.replace($1.value0)("")(h);
        };
        if ($1 instanceof Data_Either.Left) {
            return h;
        };
        throw new Error("Failed pattern match at Routing line 34, column 11 - line 36, column 28: " + [ $1.constructor.name ]);
    };
    return Data_Function.apply($foreign.hashChanged)(function (old) {
        return function ($$new) {
            return cb(dropHash(old))(dropHash($$new));
        };
    });
};
var matches$prime = function (decoder) {
    return function (routing) {
        return function (cb) {
            return Data_Function.apply(hashes)(function (old) {
                return function ($$new) {
                    var mr = matchHash$prime(decoder)(routing);
                    var fst = Data_Function.apply(Data_Either.either(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create))(mr(old));
                    return Data_Function.apply(Data_Either.either(Data_Function.apply(Data_Function["const"])(Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit)))(cb(fst)))(mr($$new));
                };
            });
        };
    };
};
var matches = matches$prime($foreign["decodeURIComponent"]);
var matchesAff$prime = function (decoder) {
    return function (routing) {
        return Control_Monad_Aff.makeAff(function (v) {
            return function (k) {
                return matches$prime(decoder)(routing)(function (old) {
                    return function ($$new) {
                        return Data_Function.apply(k)(new Data_Tuple.Tuple(old, $$new));
                    };
                });
            };
        });
    };
};
var matchesAff = matchesAff$prime($foreign["decodeURIComponent"]);
module.exports = {
    hashes: hashes, 
    matchHash: matchHash, 
    "matchHash'": matchHash$prime, 
    matches: matches, 
    "matches'": matches$prime, 
    matchesAff: matchesAff, 
    "matchesAff'": matchesAff$prime, 
    hashChanged: $foreign.hashChanged
};
