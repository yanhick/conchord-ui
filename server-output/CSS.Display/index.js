// Generated by psc version 0.9.3
"use strict";
var Prelude = require("../Prelude");
var CSS_Property = require("../CSS.Property");
var CSS_String = require("../CSS.String");
var CSS_Stylesheet = require("../CSS.Stylesheet");
var Data_Function = require("../Data.Function");
var Position = function (x) {
    return x;
};
var Display = function (x) {
    return x;
};
var valPosition = new CSS_Property.Val(function (v) {
    return v;
});
var valDisplay = new CSS_Property.Val(function (v) {
    return v;
});
var tableRowGroup = Data_Function.apply(Display)(CSS_String.fromString(CSS_Property.isStringValue)("table-row-Group"));
var tableRow = Data_Function.apply(Display)(CSS_String.fromString(CSS_Property.isStringValue)("table-row"));
var tableHeaderGroup = Data_Function.apply(Display)(CSS_String.fromString(CSS_Property.isStringValue)("table-header-group"));
var tableFooterGroup = Data_Function.apply(Display)(CSS_String.fromString(CSS_Property.isStringValue)("table-footer-group"));
var tableColumnGroup = Data_Function.apply(Display)(CSS_String.fromString(CSS_Property.isStringValue)("table-column-group"));
var tableColumn = Data_Function.apply(Display)(CSS_String.fromString(CSS_Property.isStringValue)("table-column"));
var tableCell = Data_Function.apply(Display)(CSS_String.fromString(CSS_Property.isStringValue)("table-cell"));
var tableCaption = Data_Function.apply(Display)(CSS_String.fromString(CSS_Property.isStringValue)("table-caption"));
var table = Data_Function.apply(Display)(CSS_String.fromString(CSS_Property.isStringValue)("table"));
var $$static = Data_Function.apply(Position)(CSS_String.fromString(CSS_Property.isStringValue)("static"));
var runIn = Data_Function.apply(Display)(CSS_String.fromString(CSS_Property.isStringValue)("runIn"));
var relative = Data_Function.apply(Position)(CSS_String.fromString(CSS_Property.isStringValue)("relative"));
var position = Data_Function.apply(CSS_Stylesheet.key(valPosition))(CSS_String.fromString(CSS_Property.isStringKey)("position"));
var listItem = Data_Function.apply(Display)(CSS_String.fromString(CSS_Property.isStringValue)("list-item"));
var inlineTable = Data_Function.apply(Display)(CSS_String.fromString(CSS_Property.isStringValue)("inline-table"));
var inlineGrid = Data_Function.apply(Display)(CSS_String.fromString(CSS_Property.isStringValue)("inline-grid"));
var inlineFlex = Data_Function.apply(Display)(CSS_String.fromString(CSS_Property.isStringValue)("inline-flex"));
var inlineBlock = Data_Function.apply(Display)(CSS_String.fromString(CSS_Property.isStringValue)("inline-block"));
var inline = Data_Function.apply(Display)(CSS_String.fromString(CSS_Property.isStringValue)("inline"));
var grid = Data_Function.apply(Display)(CSS_String.fromString(CSS_Property.isStringValue)("grid"));
var flex = Data_Function.apply(Display)(CSS_String.fromString(CSS_Property.isStringValue)("flex"));
var fixed = Data_Function.apply(Position)(CSS_String.fromString(CSS_Property.isStringValue)("fixed"));
var displayNone = Data_Function.apply(Display)(CSS_String.fromString(CSS_Property.isStringValue)("none"));
var displayInherit = Data_Function.apply(Display)(CSS_String.fromString(CSS_Property.isStringValue)("inherit"));
var display = Data_Function.apply(CSS_Stylesheet.key(valDisplay))(CSS_String.fromString(CSS_Property.isStringKey)("display"));
var block = Data_Function.apply(Display)(CSS_String.fromString(CSS_Property.isStringValue)("block"));
var absolute = Data_Function.apply(Position)(CSS_String.fromString(CSS_Property.isStringValue)("absolute"));
module.exports = {
    Display: Display, 
    Position: Position, 
    absolute: absolute, 
    block: block, 
    display: display, 
    displayInherit: displayInherit, 
    displayNone: displayNone, 
    fixed: fixed, 
    flex: flex, 
    grid: grid, 
    inline: inline, 
    inlineBlock: inlineBlock, 
    inlineFlex: inlineFlex, 
    inlineGrid: inlineGrid, 
    inlineTable: inlineTable, 
    listItem: listItem, 
    position: position, 
    relative: relative, 
    runIn: runIn, 
    "static": $$static, 
    table: table, 
    tableCaption: tableCaption, 
    tableCell: tableCell, 
    tableColumn: tableColumn, 
    tableColumnGroup: tableColumnGroup, 
    tableFooterGroup: tableFooterGroup, 
    tableHeaderGroup: tableHeaderGroup, 
    tableRow: tableRow, 
    tableRowGroup: tableRowGroup, 
    valPosition: valPosition, 
    valDisplay: valDisplay
};
