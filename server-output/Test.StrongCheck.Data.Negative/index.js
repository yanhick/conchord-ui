// Generated by psc version 0.9.3
"use strict";
var Prelude = require("../Prelude");
var Test_StrongCheck_Arbitrary = require("../Test.StrongCheck.Arbitrary");
var Test_StrongCheck_Gen = require("../Test.StrongCheck.Gen");
var Data_Eq = require("../Data.Eq");
var Data_Ord = require("../Data.Ord");
var Data_Functor = require("../Data.Functor");
var Data_Semiring = require("../Data.Semiring");
var Data_Ring = require("../Data.Ring");
var Control_Monad_Free = require("../Control.Monad.Free");
var Negative = function (x) {
    return x;
};
var runNegative = function (v) {
    return v;
};
var maxNumber = 9.007199254740992e15;
var eqNegative = new Data_Eq.Eq(function (x) {
    return function (y) {
        return x === y;
    };
});
var ordNegative = new Data_Ord.Ord(function () {
    return eqNegative;
}, function (x) {
    return function (y) {
        return Data_Ord.compare(Data_Ord.ordNumber)(x)(y);
    };
});
var coarbNegative = new Test_StrongCheck_Arbitrary.Coarbitrary(function (v) {
    return Test_StrongCheck_Arbitrary.coarbitrary(Test_StrongCheck_Arbitrary.coarbNumber)(v);
});
var arbNegative = new Test_StrongCheck_Arbitrary.Arbitrary(Data_Functor.map(Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.freeMonad))(Data_Functor.map(Data_Functor.functorFn)(Negative)(function (v) {
    return v * -maxNumber;
}))(Test_StrongCheck_Gen.uniform(Control_Monad_Free.freeMonad)));
module.exports = {
    Negative: Negative, 
    runNegative: runNegative, 
    eqNegative: eqNegative, 
    ordNegative: ordNegative, 
    arbNegative: arbNegative, 
    coarbNegative: coarbNegative
};
