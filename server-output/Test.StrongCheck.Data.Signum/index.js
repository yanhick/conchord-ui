// Generated by psc version 0.9.3
"use strict";
var Prelude = require("../Prelude");
var Test_StrongCheck_Arbitrary = require("../Test.StrongCheck.Arbitrary");
var Data_Eq = require("../Data.Eq");
var Data_Ord = require("../Data.Ord");
var Control_Bind = require("../Control.Bind");
var Data_Function = require("../Data.Function");
var Control_Applicative = require("../Control.Applicative");
var Data_Ring = require("../Data.Ring");
var Test_StrongCheck_Gen = require("../Test.StrongCheck.Gen");
var Control_Monad_Free = require("../Control.Monad.Free");
var Signum = function (x) {
    return x;
};
var runSignum = function (v) {
    return v;
};
var eqSignum = new Data_Eq.Eq(function (x) {
    return function (y) {
        return x === y;
    };
});
var ordSignum = new Data_Ord.Ord(function () {
    return eqSignum;
}, function (x) {
    return function (y) {
        return Data_Ord.compare(Data_Ord.ordInt)(x)(y);
    };
});
var coarbSignum = new Test_StrongCheck_Arbitrary.Coarbitrary(function (v) {
    return Test_StrongCheck_Arbitrary.coarbitrary(Test_StrongCheck_Arbitrary.coarbInt)(v);
});
var arbSignum = new Test_StrongCheck_Arbitrary.Arbitrary(Control_Bind.bind(Test_StrongCheck_Gen.bindGenT(Control_Monad_Free.freeMonad))(Test_StrongCheck_Arbitrary.arbitrary(Test_StrongCheck_Arbitrary.arbBoolean))(function (v) {
    return Data_Function.apply(Control_Applicative.pure(Test_StrongCheck_Gen.applicativeGenT(Control_Monad_Free.freeMonad)))((function () {
        if (v) {
            return 1;
        };
        if (!v) {
            return -1;
        };
        throw new Error("Failed pattern match at Test.StrongCheck.Data.Signum line 18, column 20 - line 18, column 39: " + [ v.constructor.name ]);
    })());
}));
module.exports = {
    Signum: Signum, 
    runSignum: runSignum, 
    eqSignum: eqSignum, 
    ordSignum: ordSignum, 
    arbSignum: arbSignum, 
    coarbSignum: coarbSignum
};
