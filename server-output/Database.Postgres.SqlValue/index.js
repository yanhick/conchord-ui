// Generated by psc version 0.9.3
"use strict";
var $foreign = require("./foreign");
var Prelude = require("../Prelude");
var Data_Int = require("../Data.Int");
var Data_Maybe = require("../Data.Maybe");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var IsSqlValue = function (toSql) {
    this.toSql = toSql;
};
var toSql = function (dict) {
    return dict.toSql;
};
var isSqlValueString = new IsSqlValue($foreign.unsafeToSqlValue);
var isSqlValueNumber = new IsSqlValue($foreign.unsafeToSqlValue);
var isSqlValueMaybe = function (dictIsSqlValue) {
    return new IsSqlValue(function (v) {
        if (v instanceof Data_Maybe.Nothing) {
            return $foreign.nullSqlValue;
        };
        if (v instanceof Data_Maybe.Just) {
            return toSql(dictIsSqlValue)(v.value0);
        };
        throw new Error("Failed pattern match at Database.Postgres.SqlValue line 26, column 3 - line 26, column 31: " + [ v.constructor.name ]);
    });
};
var isSqlValueInt = new IsSqlValue(function ($4) {
    return $foreign.unsafeToSqlValue(Data_Int.toNumber($4));
});
module.exports = {
    IsSqlValue: IsSqlValue, 
    toSql: toSql, 
    isSqlValueString: isSqlValueString, 
    isSqlValueNumber: isSqlValueNumber, 
    isSqlValueInt: isSqlValueInt, 
    isSqlValueMaybe: isSqlValueMaybe
};
