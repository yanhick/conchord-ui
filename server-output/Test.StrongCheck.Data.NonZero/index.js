// Generated by psc version 0.9.3
"use strict";
var Prelude = require("../Prelude");
var Test_StrongCheck_Arbitrary = require("../Test.StrongCheck.Arbitrary");
var Data_Eq = require("../Data.Eq");
var Data_Ord = require("../Data.Ord");
var Control_Bind = require("../Control.Bind");
var Data_Ring = require("../Data.Ring");
var Data_Function = require("../Data.Function");
var Control_Applicative = require("../Control.Applicative");
var Data_Semiring = require("../Data.Semiring");
var Test_StrongCheck_Gen = require("../Test.StrongCheck.Gen");
var Control_Monad_Free = require("../Control.Monad.Free");
var NonZero = function (x) {
    return x;
};
var runNonZero = function (v) {
    return v;
};
var maxNumber = 9.007199254740992e15;
var eqNonZero = new Data_Eq.Eq(function (x) {
    return function (y) {
        return x === y;
    };
});
var ordNonZero = new Data_Ord.Ord(function () {
    return eqNonZero;
}, function (x) {
    return function (y) {
        return Data_Ord.compare(Data_Ord.ordNumber)(x)(y);
    };
});
var coarbNonZero = new Test_StrongCheck_Arbitrary.Coarbitrary(function (v) {
    return Test_StrongCheck_Arbitrary.coarbitrary(Test_StrongCheck_Arbitrary.coarbNumber)(v);
});
var arbNonZero = new Test_StrongCheck_Arbitrary.Arbitrary(Control_Bind.bind(Test_StrongCheck_Gen.bindGenT(Control_Monad_Free.freeMonad))(Test_StrongCheck_Arbitrary.arbitrary(Test_StrongCheck_Arbitrary.arbNumber))(function (v) {
    return Control_Bind.bind(Test_StrongCheck_Gen.bindGenT(Control_Monad_Free.freeMonad))(Test_StrongCheck_Arbitrary.arbitrary(Test_StrongCheck_Arbitrary.arbBoolean))(function (v1) {
        var sign = (function () {
            if (v1) {
                return 1.0;
            };
            if (!v1) {
                return -1.0;
            };
            throw new Error("Failed pattern match at Test.StrongCheck.Data.NonZero line 22, column 16 - line 23, column 5: " + [ v1.constructor.name ]);
        })();
        return Data_Function.apply(Control_Applicative.pure(Test_StrongCheck_Gen.applicativeGenT(Control_Monad_Free.freeMonad)))(v * maxNumber * sign);
    });
}));
module.exports = {
    NonZero: NonZero, 
    runNonZero: runNonZero, 
    eqNonZero: eqNonZero, 
    ordNonZero: ordNonZero, 
    arbNonZero: arbNonZero, 
    coarbNonZero: coarbNonZero
};
