// Generated by psc version 0.9.3
"use strict";
var Prelude = require("../Prelude");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Control_Monad_Aff_Class = require("../Control.Monad.Aff.Class");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Eff_Exception = require("../Control.Monad.Eff.Exception");
var Node_Express_Types = require("../Node.Express.Types");
var Node_Express_Internal_Utils = require("../Node.Express.Internal.Utils");
var Data_Functor = require("../Data.Functor");
var Control_Bind = require("../Control.Bind");
var Data_Function = require("../Data.Function");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Monad = require("../Control.Monad");
var HandlerM = (function () {
    function HandlerM(value0) {
        this.value0 = value0;
    };
    HandlerM.create = function (value0) {
        return new HandlerM(value0);
    };
    return HandlerM;
})();
var runHandlerM = function (v) {
    return function (req) {
        return function (res) {
            return function (nxt) {
                return Data_Function.apply(Data_Functor["void"](Control_Monad_Eff.functorEff))(Control_Monad_Aff.runAff(Data_Function_Uncurried.runFn2(Node_Express_Internal_Utils.nextWithError)(nxt))(Control_Applicative.pure(Control_Monad_Eff.applicativeEff))(v.value0(req)(res)(nxt)));
            };
        };
    };
};
var nextThrow = function (err) {
    return new HandlerM(function (v) {
        return function (v1) {
            return function (nxt) {
                return Data_Function.apply(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff))(Node_Express_Internal_Utils.nextWithError(nxt, err));
            };
        };
    });
};
var next = new HandlerM(function (v) {
    return function (v1) {
        return function (nxt) {
            return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(nxt);
        };
    };
});
var functorHandlerM = new Data_Functor.Functor(function (f) {
    return function (v) {
        return new HandlerM(function (req) {
            return function (resp) {
                return function (nxt) {
                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(v.value0(req)(resp)(nxt))(function (r) {
                        return Data_Function.apply(Control_Applicative.pure(Control_Monad_Aff.applicativeAff))(f(r));
                    });
                };
            };
        });
    };
});
var applyHandlerM = new Control_Apply.Apply(function () {
    return functorHandlerM;
}, function (v) {
    return function (v1) {
        return new HandlerM(function (req) {
            return function (resp) {
                return function (nxt) {
                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(v1.value0(req)(resp)(nxt))(function (v2) {
                        return Control_Bind.bind(Control_Monad_Aff.bindAff)(v.value0(req)(resp)(nxt))(function (v3) {
                            return Data_Function.apply(Control_Applicative.pure(Control_Monad_Aff.applicativeAff))(v3(v2));
                        });
                    });
                };
            };
        });
    };
});
var bindHandlerM = new Control_Bind.Bind(function () {
    return applyHandlerM;
}, function (v) {
    return function (f) {
        return new HandlerM(function (req) {
            return function (resp) {
                return function (nxt) {
                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Data_Function.apply(Control_Monad.liftM1(Control_Monad_Aff.monadAff)(f))(v.value0(req)(resp)(nxt)))(function (v1) {
                        return v1.value0(req)(resp)(nxt);
                    });
                };
            };
        });
    };
});
var applicativeHandlerM = new Control_Applicative.Applicative(function () {
    return applyHandlerM;
}, function (x) {
    return new HandlerM(function (v) {
        return function (v1) {
            return function (v2) {
                return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(x);
            };
        };
    });
});
var monadHandlerM = new Control_Monad.Monad(function () {
    return applicativeHandlerM;
}, function () {
    return bindHandlerM;
});
var monadEffHandlerM = new Control_Monad_Eff_Class.MonadEff(function () {
    return monadHandlerM;
}, function (act) {
    return new HandlerM(function (v) {
        return function (v1) {
            return function (v2) {
                return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(act);
            };
        };
    });
});
var monadAffHandlerM = new Control_Monad_Aff_Class.MonadAff(function () {
    return monadEffHandlerM;
}, function (act) {
    return new HandlerM(function (v) {
        return function (v1) {
            return function (v2) {
                return act;
            };
        };
    });
});
module.exports = {
    HandlerM: HandlerM, 
    next: next, 
    nextThrow: nextThrow, 
    runHandlerM: runHandlerM, 
    functorHandlerM: functorHandlerM, 
    applyHandlerM: applyHandlerM, 
    applicativeHandlerM: applicativeHandlerM, 
    bindHandlerM: bindHandlerM, 
    monadHandlerM: monadHandlerM, 
    monadEffHandlerM: monadEffHandlerM, 
    monadAffHandlerM: monadAffHandlerM
};
