// Generated by psc version 0.9.3
"use strict";
var Data_Tuple = require("../Data.Tuple");
var Prelude = require("../Prelude");
var CSS_Box = require("../CSS.Box");
var CSS_Color = require("../CSS.Color");
var CSS_Common = require("../CSS.Common");
var CSS_Property = require("../CSS.Property");
var CSS_Stylesheet = require("../CSS.Stylesheet");
var CSS_String = require("../CSS.String");
var CSS_Size = require("../CSS.Size");
var Data_Function = require("../Data.Function");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Semigroup = require("../Data.Semigroup");
var Side = function (x) {
    return x;
};
var Location = function (x) {
    return x;
};
var Direction = function (x) {
    return x;
};
var BackgroundSize = function (x) {
    return x;
};
var BackgroundRepeat = function (x) {
    return x;
};
var BackgroundPosition = function (x) {
    return x;
};
var BackgroundOrigin = function (x) {
    return x;
};
var BackgroundImage = function (x) {
    return x;
};
var BackgroundClip = function (x) {
    return x;
};
var BackgroundAttachment = function (x) {
    return x;
};
var Background = function (__superclass_CSS$dotProperty$dotVal_0, background) {
    this["__superclass_CSS.Property.Val_0"] = __superclass_CSS$dotProperty$dotVal_0;
    this.background = background;
};
var Loc = function (__superclass_CSS$dotProperty$dotVal_0, location) {
    this["__superclass_CSS.Property.Val_0"] = __superclass_CSS$dotProperty$dotVal_0;
    this.location = location;
};
var valSide = new CSS_Property.Val(function (v) {
    return v;
});
var valLocation = new CSS_Property.Val(function (v) {
    return v;
});
var valDirection = new CSS_Property.Val(function (v) {
    return v;
});
var valBackgroundSize = new CSS_Property.Val(function (v) {
    return v;
});
var valBackgroundRepeat = new CSS_Property.Val(function (v) {
    return v;
});
var xyRepeat = function (a) {
    return function (b) {
        return CSS_Property.value(CSS_Property.valTuple(valBackgroundRepeat)(valBackgroundRepeat))(new Data_Tuple.Tuple(a, b));
    };
};
var valBackgroundPosition = new CSS_Property.Val(function (v) {
    return v;
});
var valBackgroundOrigin = new CSS_Property.Val(function (v) {
    return v;
});
var valBackgroundImage = new CSS_Property.Val(function (v) {
    return v;
});
var valBackgroundClip = new CSS_Property.Val(function (v) {
    return v;
});
var valBackgroundAttachment = new CSS_Property.Val(function (v) {
    return v;
});
var url = function (u) {
    return CSS_Property.value(CSS_Property.valString)("url(\"" + (u + "\")"));
};
var straight = function (a) {
    return CSS_Property.value(valSide)(a);
};
var space = Data_Function.apply(BackgroundRepeat)(CSS_String.fromString(CSS_Property.isStringValue)("space"));
var sideTop = Data_Function.apply(Side)(CSS_String.fromString(CSS_Property.isStringValue)("top"));
var sideRight = Data_Function.apply(Side)(CSS_String.fromString(CSS_Property.isStringValue)("right"));
var sideMiddle = Data_Function.apply(Side)(CSS_String.fromString(CSS_Property.isStringValue)("middle"));
var sideLeft = Data_Function.apply(Side)(CSS_String.fromString(CSS_Property.isStringValue)("left"));
var sideCenter = Data_Function.apply(Side)(CSS_String.fromString(CSS_Property.isStringValue)("center"));
var sideBottom = Data_Function.apply(Side)(CSS_String.fromString(CSS_Property.isStringValue)("bottom"));
var round = Data_Function.apply(BackgroundRepeat)(CSS_String.fromString(CSS_Property.isStringValue)("round"));
var repeat = Data_Function.apply(BackgroundRepeat)(CSS_String.fromString(CSS_Property.isStringValue)("repeat"));
var positioned = function (a) {
    return function (b) {
        return CSS_Property.value(CSS_Property.valTuple(CSS_Size.valSize)(CSS_Size.valSize))(new Data_Tuple.Tuple(a, b));
    };
};
var placed = function (a) {
    return function (b) {
        return CSS_Property.value(CSS_Property.valTuple(valSide)(valSide))(new Data_Tuple.Tuple(a, b));
    };
};
var otherSide = new CSS_Common.Other(Side);
var otherLocation = new CSS_Common.Other(Location);
var otherDirection = new CSS_Common.Other(Direction);
var otherBackgroundSize = new CSS_Common.Other(BackgroundSize);
var otherBackgroundRepeat = new CSS_Common.Other(BackgroundRepeat);
var otherBackgroundPosition = new CSS_Common.Other(BackgroundPosition);
var otherBackgroundOrigin = new CSS_Common.Other(BackgroundOrigin);
var otherBackgroundImage = new CSS_Common.Other(BackgroundImage);
var otherBackgroundClip = new CSS_Common.Other(BackgroundClip);
var otherBackgroundAttachment = new CSS_Common.Other(BackgroundAttachment);
var origin = function (b) {
    return CSS_Property.value(CSS_Box.valBoxType)(b);
};
var noRepeat = Data_Function.apply(BackgroundRepeat)(CSS_String.fromString(CSS_Property.isStringValue)("no-repeat"));
var repeatX = xyRepeat(repeat)(noRepeat);
var repeatY = xyRepeat(noRepeat)(repeat);
var location = function (dict) {
    return dict.location;
};
var locTuple = function (dictLoc) {
    return function (dictLoc1) {
        return new Loc(function () {
            return CSS_Property.valTuple(dictLoc["__superclass_CSS.Property.Val_0"]())(dictLoc1["__superclass_CSS.Property.Val_0"]());
        }, function ($25) {
            return Location(CSS_Property.value(CSS_Property.valTuple(dictLoc["__superclass_CSS.Property.Val_0"]())(dictLoc1["__superclass_CSS.Property.Val_0"]()))($25));
        });
    };
};
var locSize = new Loc(function () {
    return CSS_Size.valSize;
}, function ($26) {
    return Location(CSS_Property.value(CSS_Size.valSize)($26));
});
var locSide = new Loc(function () {
    return valSide;
}, function ($27) {
    return Location(CSS_Property.value(valSide)($27));
});
var isStringSide = new CSS_String.IsString(function ($28) {
    return Side(CSS_String.fromString(CSS_Property.isStringValue)($28));
});
var isStringBackgroundSize = new CSS_String.IsString(function ($29) {
    return BackgroundSize(CSS_String.fromString(CSS_Property.isStringValue)($29));
});
var isStringBackgroundRepeat = new CSS_String.IsString(function ($30) {
    return BackgroundRepeat(CSS_String.fromString(CSS_Property.isStringValue)($30));
});
var noneBackgroundRepeat = new CSS_Common.None(CSS_String.fromString(isStringBackgroundRepeat)("none"));
var isStringBackgroundPosition = new CSS_String.IsString(function ($31) {
    return BackgroundPosition(CSS_String.fromString(CSS_Property.isStringValue)($31));
});
var isStringBackgroundOrigin = new CSS_String.IsString(function ($32) {
    return BackgroundOrigin(CSS_String.fromString(CSS_Property.isStringValue)($32));
});
var isStringBackgroundImage = new CSS_String.IsString(function ($33) {
    return BackgroundImage(CSS_String.fromString(CSS_Property.isStringValue)($33));
});
var noneBackgroundImage = new CSS_Common.None(CSS_String.fromString(isStringBackgroundImage)("none"));
var isStringBackgroundClip = new CSS_String.IsString(function ($34) {
    return BackgroundClip(CSS_String.fromString(CSS_Property.isStringValue)($34));
});
var isStringBackgroundAttachment = new CSS_String.IsString(function ($35) {
    return BackgroundAttachment(CSS_String.fromString(CSS_Property.isStringValue)($35));
});
var inheritSide = new CSS_Common.Inherit(CSS_String.fromString(isStringSide)("inherit"));
var inheritBackgroundSize = new CSS_Common.Inherit(CSS_String.fromString(isStringBackgroundSize)("inherit"));
var inheritBackgroundRepeat = new CSS_Common.Inherit(CSS_String.fromString(isStringBackgroundRepeat)("inherit"));
var inheritBackgroundPosition = new CSS_Common.Inherit(CSS_String.fromString(isStringBackgroundPosition)("inherit"));
var inheritBackgroundOrigin = new CSS_Common.Inherit(CSS_String.fromString(isStringBackgroundOrigin)("inherit"));
var inheritBackgroundImage = new CSS_Common.Inherit(CSS_String.fromString(isStringBackgroundImage)("inherit"));
var inheritBackgroundClip = new CSS_Common.Inherit(CSS_String.fromString(isStringBackgroundClip)("inherit"));
var inheritBackgroundAttachment = new CSS_Common.Inherit(CSS_String.fromString(isStringBackgroundAttachment)("inherit"));
var cover = Data_Function.apply(BackgroundSize)(CSS_String.fromString(CSS_Property.isStringValue)("cover"));
var contain = Data_Function.apply(BackgroundSize)(CSS_String.fromString(CSS_Property.isStringValue)("contain"));
var by = function (a) {
    return function (b) {
        return CSS_Property.value(CSS_Property.valTuple(CSS_Size.valSize)(CSS_Size.valSize))(new Data_Tuple.Tuple(a, b));
    };
};
var boxClip = function (b) {
    return CSS_Property.value(CSS_Box.valBoxType)(b);
};
var backgroundTuple = function (dictBackground) {
    return function (dictBackground1) {
        return new Background(function () {
            return CSS_Property.valTuple(dictBackground["__superclass_CSS.Property.Val_0"]())(dictBackground1["__superclass_CSS.Property.Val_0"]());
        }, Data_Function.apply(CSS_Stylesheet.key(CSS_Property.valTuple(dictBackground["__superclass_CSS.Property.Val_0"]())(dictBackground1["__superclass_CSS.Property.Val_0"]())))(CSS_String.fromString(CSS_Property.isStringKey)("background")));
    };
};
var backgroundSizes = Data_Function.apply(CSS_Stylesheet.key(CSS_Property.valList(valBackgroundSize)))(CSS_String.fromString(CSS_Property.isStringKey)("background-size"));
var backgroundSize$prime = new Background(function () {
    return valBackgroundSize;
}, Data_Function.apply(CSS_Stylesheet.key(valBackgroundSize))(CSS_String.fromString(CSS_Property.isStringKey)("background")));
var backgroundSize = Data_Function.apply(CSS_Stylesheet.key(valBackgroundSize))(CSS_String.fromString(CSS_Property.isStringKey)("background-size"));
var backgroundRepeats = Data_Function.apply(CSS_Stylesheet.key(CSS_Property.valList(valBackgroundRepeat)))(CSS_String.fromString(CSS_Property.isStringKey)("background-repeat"));
var backgroundRepeat = Data_Function.apply(CSS_Stylesheet.key(valBackgroundRepeat))(CSS_String.fromString(CSS_Property.isStringKey)("background-repeat"));
var backgroundPositions = Data_Function.apply(CSS_Stylesheet.key(CSS_Property.valList(valBackgroundPosition)))(CSS_String.fromString(CSS_Property.isStringKey)("background-position"));
var backgroundPosition$prime = new Background(function () {
    return valBackgroundPosition;
}, Data_Function.apply(CSS_Stylesheet.key(valBackgroundPosition))(CSS_String.fromString(CSS_Property.isStringKey)("background")));
var backgroundPosition = Data_Function.apply(CSS_Stylesheet.key(valBackgroundPosition))(CSS_String.fromString(CSS_Property.isStringKey)("background-position"));
var backgroundOrigins = Data_Function.apply(CSS_Stylesheet.key(CSS_Property.valList(valBackgroundOrigin)))(CSS_String.fromString(CSS_Property.isStringKey)("background-origin"));
var backgroundOrigin = Data_Function.apply(CSS_Stylesheet.key(valBackgroundOrigin))(CSS_String.fromString(CSS_Property.isStringKey)("background-origin"));
var backgroundImages = Data_Function.apply(CSS_Stylesheet.key(CSS_Property.valList(valBackgroundImage)))(CSS_String.fromString(CSS_Property.isStringKey)("background-image"));
var backgroundImage = Data_Function.apply(CSS_Stylesheet.key(valBackgroundImage))(CSS_String.fromString(CSS_Property.isStringKey)("background-image"));
var backgroundColor$prime = new Background(function () {
    return CSS_Property.valColor;
}, Data_Function.apply(CSS_Stylesheet.key(CSS_Property.valColor))(CSS_String.fromString(CSS_Property.isStringKey)("background")));
var backgroundColor = Data_Function.apply(CSS_Stylesheet.key(CSS_Property.valColor))(CSS_String.fromString(CSS_Property.isStringKey)("background-color"));
var backgroundClips = Data_Function.apply(CSS_Stylesheet.key(CSS_Property.valList(valBackgroundClip)))(CSS_String.fromString(CSS_Property.isStringKey)("background-clip"));
var backgroundClip = Data_Function.apply(CSS_Stylesheet.key(valBackgroundClip))(CSS_String.fromString(CSS_Property.isStringKey)("background-clip"));
var backgroundBackgroundRepeat = new Background(function () {
    return valBackgroundRepeat;
}, Data_Function.apply(CSS_Stylesheet.key(valBackgroundRepeat))(CSS_String.fromString(CSS_Property.isStringKey)("background")));
var backgroundBackgroundOrigin = new Background(function () {
    return valBackgroundOrigin;
}, Data_Function.apply(CSS_Stylesheet.key(valBackgroundOrigin))(CSS_String.fromString(CSS_Property.isStringKey)("background")));
var backgroundBackgroundImage = new Background(function () {
    return valBackgroundImage;
}, Data_Function.apply(CSS_Stylesheet.key(valBackgroundImage))(CSS_String.fromString(CSS_Property.isStringKey)("background")));
var backgroundBackgroundClip = new Background(function () {
    return valBackgroundClip;
}, Data_Function.apply(CSS_Stylesheet.key(valBackgroundClip))(CSS_String.fromString(CSS_Property.isStringKey)("background")));
var backgroundBackgroundAttachment = new Background(function () {
    return valBackgroundAttachment;
}, Data_Function.apply(CSS_Stylesheet.key(valBackgroundAttachment))(CSS_String.fromString(CSS_Property.isStringKey)("background")));
var backgroundAttachments = Data_Function.apply(CSS_Stylesheet.key(CSS_Property.valList(valBackgroundAttachment)))(CSS_String.fromString(CSS_Property.isStringKey)("background-attachment"));
var backgroundAttachment = Data_Function.apply(CSS_Stylesheet.key(valBackgroundAttachment))(CSS_String.fromString(CSS_Property.isStringKey)("background-attachment"));
var backgroundArray = function (dictBackground) {
    return new Background(function () {
        return CSS_Property.valList(dictBackground["__superclass_CSS.Property.Val_0"]());
    }, Data_Function.apply(CSS_Stylesheet.key(CSS_Property.valList(dictBackground["__superclass_CSS.Property.Val_0"]())))(CSS_String.fromString(CSS_Property.isStringKey)("background")));
};
var background = function (dict) {
    return dict.background;
};
var autoBackgroundSize = new CSS_Common.Auto(by(CSS_Common.auto(CSS_Size.autoSize))(CSS_Common.auto(CSS_Size.autoSize)));
var attachScroll = Data_Function.apply(BackgroundAttachment)(CSS_String.fromString(CSS_Property.isStringValue)("scroll"));
var attachFixed = Data_Function.apply(BackgroundAttachment)(CSS_String.fromString(CSS_Property.isStringValue)("fixed"));
var angular = function (a) {
    return CSS_Property.value(CSS_Size.valAngle)(a);
};
module.exports = {
    Background: Background, 
    Loc: Loc, 
    angular: angular, 
    attachFixed: attachFixed, 
    attachScroll: attachScroll, 
    background: background, 
    backgroundAttachment: backgroundAttachment, 
    backgroundAttachments: backgroundAttachments, 
    backgroundClip: backgroundClip, 
    backgroundClips: backgroundClips, 
    backgroundColor: backgroundColor, 
    backgroundImage: backgroundImage, 
    backgroundImages: backgroundImages, 
    backgroundOrigin: backgroundOrigin, 
    backgroundOrigins: backgroundOrigins, 
    backgroundPosition: backgroundPosition, 
    backgroundPositions: backgroundPositions, 
    backgroundRepeat: backgroundRepeat, 
    backgroundRepeats: backgroundRepeats, 
    backgroundSize: backgroundSize, 
    backgroundSizes: backgroundSizes, 
    boxClip: boxClip, 
    by: by, 
    contain: contain, 
    cover: cover, 
    location: location, 
    noRepeat: noRepeat, 
    origin: origin, 
    placed: placed, 
    positioned: positioned, 
    repeat: repeat, 
    repeatX: repeatX, 
    repeatY: repeatY, 
    round: round, 
    sideBottom: sideBottom, 
    sideCenter: sideCenter, 
    sideLeft: sideLeft, 
    sideMiddle: sideMiddle, 
    sideRight: sideRight, 
    sideTop: sideTop, 
    space: space, 
    straight: straight, 
    url: url, 
    xyRepeat: xyRepeat, 
    backgroundArray: backgroundArray, 
    backgroundTuple: backgroundTuple, 
    "backgroundColor'": backgroundColor$prime, 
    "backgroundPosition'": backgroundPosition$prime, 
    "backgroundSize'": backgroundSize$prime, 
    backgroundBackgroundRepeat: backgroundBackgroundRepeat, 
    backgroundBackgroundOrigin: backgroundBackgroundOrigin, 
    backgroundBackgroundClip: backgroundBackgroundClip, 
    backgroundBackgroundAttachment: backgroundBackgroundAttachment, 
    backgroundBackgroundImage: backgroundBackgroundImage, 
    isStringBackgroundPosition: isStringBackgroundPosition, 
    valBackgroundPosition: valBackgroundPosition, 
    otherBackgroundPosition: otherBackgroundPosition, 
    inheritBackgroundPosition: inheritBackgroundPosition, 
    isStringBackgroundSize: isStringBackgroundSize, 
    valBackgroundSize: valBackgroundSize, 
    otherBackgroundSize: otherBackgroundSize, 
    inheritBackgroundSize: inheritBackgroundSize, 
    autoBackgroundSize: autoBackgroundSize, 
    isStringBackgroundRepeat: isStringBackgroundRepeat, 
    valBackgroundRepeat: valBackgroundRepeat, 
    otherBackgroundRepeat: otherBackgroundRepeat, 
    inheritBackgroundRepeat: inheritBackgroundRepeat, 
    noneBackgroundRepeat: noneBackgroundRepeat, 
    isStringBackgroundImage: isStringBackgroundImage, 
    valBackgroundImage: valBackgroundImage, 
    otherBackgroundImage: otherBackgroundImage, 
    inheritBackgroundImage: inheritBackgroundImage, 
    noneBackgroundImage: noneBackgroundImage, 
    isStringBackgroundOrigin: isStringBackgroundOrigin, 
    valBackgroundOrigin: valBackgroundOrigin, 
    otherBackgroundOrigin: otherBackgroundOrigin, 
    inheritBackgroundOrigin: inheritBackgroundOrigin, 
    isStringBackgroundClip: isStringBackgroundClip, 
    valBackgroundClip: valBackgroundClip, 
    otherBackgroundClip: otherBackgroundClip, 
    inheritBackgroundClip: inheritBackgroundClip, 
    isStringBackgroundAttachment: isStringBackgroundAttachment, 
    valBackgroundAttachment: valBackgroundAttachment, 
    otherBackgroundAttachment: otherBackgroundAttachment, 
    inheritBackgroundAttachment: inheritBackgroundAttachment, 
    isStringSide: isStringSide, 
    valSide: valSide, 
    otherSide: otherSide, 
    inheritSide: inheritSide, 
    valDirection: valDirection, 
    otherDirection: otherDirection, 
    valLocation: valLocation, 
    otherLocation: otherLocation, 
    locSide: locSide, 
    locSize: locSize, 
    locTuple: locTuple
};
