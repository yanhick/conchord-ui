// Generated by psc version 0.9.3
"use strict";
var Prelude = require("../Prelude");
var Data_Foreign = require("../Data.Foreign");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Op = require("../Data.Op");
var Data_StrMap = require("../Data.StrMap");
var Data_Tuple = require("../Data.Tuple");
var Data_Semigroup = require("../Data.Semigroup");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Options = function (x) {
    return x;
};
var semigroupOptions = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        return Data_Semigroup.append(Data_Semigroup.semigroupArray)(v)(v1);
    };
});
var runOptions = function (v) {
    return v;
};
var options = function ($9) {
    return Data_Foreign.toForeign(Data_StrMap.fromFoldable(Data_Foldable.foldableArray)(runOptions($9)));
};
var monoidOptions = new Data_Monoid.Monoid(function () {
    return semigroupOptions;
}, [  ]);
var defaultToOptions = function (k) {
    return function (v) {
        return [ new Data_Tuple.Tuple(k, Data_Foreign.toForeign(v)) ];
    };
};
var opt = function ($10) {
    return Data_Op.Op(defaultToOptions($10));
};
var assoc = function (o) {
    return function (value) {
        return Data_Op.runOp(o)(value);
    };
};
var optional = function (option) {
    return Data_Function.apply(Data_Op.Op)(Data_Maybe.maybe(Data_Monoid.mempty(monoidOptions))(function (v) {
        return assoc(option)(v);
    }));
};
var tag = function (o) {
    return function (value) {
        return function (v) {
            return assoc(o)(value);
        };
    };
};
module.exports = {
    assoc: assoc, 
    defaultToOptions: defaultToOptions, 
    opt: opt, 
    optional: optional, 
    options: options, 
    runOptions: runOptions, 
    tag: tag, 
    semigroupOptions: semigroupOptions, 
    monoidOptions: monoidOptions
};
